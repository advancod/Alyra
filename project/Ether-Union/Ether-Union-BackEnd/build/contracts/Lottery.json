{
  "contractName": "Lottery",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getAddresse",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceGroup",
          "type": "uint256"
        }
      ],
      "name": "modifierPriceGroup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGroupesPerAddress",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_groupe",
          "type": "string"
        }
      ],
      "name": "getPseudoInGroup",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_groupe",
          "type": "string"
        }
      ],
      "name": "getMembres",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getDonnations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceChannel",
          "type": "uint256"
        }
      ],
      "name": "modifierPriceChannel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ID",
          "type": "uint256"
        }
      ],
      "name": "getNomGroupe",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getDescription",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ID",
          "type": "uint256"
        }
      ],
      "name": "getNomMembre",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPriceChannel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "fermetureCanal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceRatio",
          "type": "uint256"
        }
      ],
      "name": "modifierCharges",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getReceptions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceMember",
          "type": "uint256"
        }
      ],
      "name": "modifierPriceMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "payerCanal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPriceMember",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getGroupe",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_membre",
          "type": "address"
        },
        {
          "name": "_groupe",
          "type": "string"
        },
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "ajouterMembre",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getEncours",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxAmount",
          "type": "uint256"
        }
      ],
      "name": "modifierMaxAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "getMontant",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_montant",
          "type": "uint256"
        },
        {
          "name": "_pseudo",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "demander",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwnedGroupe",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPriceGroup",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nom",
          "type": "string"
        },
        {
          "name": "_pseudo",
          "type": "string"
        }
      ],
      "name": "creerGroupe",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minAmount",
          "type": "uint256"
        }
      ],
      "name": "modifierMinAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "groupe",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "pseudo",
          "type": "string"
        }
      ],
      "name": "nouvelleDemamnde",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_price",
          "type": "uint256"
        },
        {
          "name": "_blockEnd",
          "type": "uint256"
        }
      ],
      "name": "initierLottery",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_prediction",
          "type": "uint256"
        }
      ],
      "name": "play",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "endGame",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeGame",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "saveWin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawGains",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStateGame",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrixLottery",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEndGame",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSuperCagnotte",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrediction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBlockStop",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stop",
          "type": "uint256"
        }
      ],
      "name": "modifierBlockStop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCagnotte",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGains",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSolde",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNbGagnants",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getAddresse\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEndGame\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"saveWin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceGroup\",\"type\":\"uint256\"}],\"name\":\"modifierPriceGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stop\",\"type\":\"uint256\"}],\"name\":\"modifierBlockStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGroupesPerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSuperCagnotte\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_groupe\",\"type\":\"string\"}],\"name\":\"getPseudoInGroup\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_groupe\",\"type\":\"string\"}],\"name\":\"getMembres\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getDonnations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceChannel\",\"type\":\"uint256\"}],\"name\":\"modifierPriceChannel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ID\",\"type\":\"uint256\"}],\"name\":\"getNomGroupe\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getDescription\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawGains\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCagnotte\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ID\",\"type\":\"uint256\"}],\"name\":\"getNomMembre\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceChannel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"fermetureCanal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceRatio\",\"type\":\"uint256\"}],\"name\":\"modifierCharges\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSolde\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getReceptions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceMember\",\"type\":\"uint256\"}],\"name\":\"modifierPriceMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"payerCanal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceMember\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_prediction\",\"type\":\"uint256\"}],\"name\":\"play\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStateGame\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getGroupe\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_membre\",\"type\":\"address\"},{\"name\":\"_groupe\",\"type\":\"string\"},{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"ajouterMembre\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getEncours\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrediction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrixLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlockStop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"modifierMaxAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNbGagnants\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"getMontant\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_montant\",\"type\":\"uint256\"},{\"name\":\"_pseudo\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"demander\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnedGroupe\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGains\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceGroup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nom\",\"type\":\"string\"},{\"name\":\"_pseudo\",\"type\":\"string\"}],\"name\":\"creerGroupe\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"modifierMinAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_blockEnd\",\"type\":\"uint256\"}],\"name\":\"initierLottery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"groupe\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"pseudo\",\"type\":\"string\"}],\"name\":\"nouvelleDemamnde\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Cagnottes.sol\":{\"keccak256\":\"0x272c99d79d4c10253dcc670c15c6d485736abee9a889010600cb65cf30dc2e04\",\"urls\":[\"bzzr://7f4ac9375d524c91c46908a2a29cddaff34cd2cc4c8647759ffc5b8730ae8fae\"]},\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Gimicoin.sol\":{\"keccak256\":\"0xa22f5b4e5310d642b3d5b565b3e8ee28e2ecfd716bfcc4b9105415fdb0f728ad\",\"urls\":[\"bzzr://c8109a7030c70060a150c34938f1347c55c7f02746d43fb1599aecefcea98136\"]},\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/IERC20.sol\":{\"keccak256\":\"0x2f202b7a0c828890679d42c903b0a23662c240c4c5b1e15a6a8b5dd4c03acf58\",\"urls\":[\"bzzr://6f8e5b6437ab7b9037921135478b7ce9f3b23400b9329d09345a530874d8b663\"]},\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Lottery.sol\":{\"keccak256\":\"0x10f6584f8fff33b170037425eab7b6a6e740fbbb0b4ff0985c3d03ff34f061e8\",\"urls\":[\"bzzr://e2a0294fb21ee80c1485b7367e5092df982f01ae7aa1fffc59e178ea0b493297\"]},\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Ownable.sol\":{\"keccak256\":\"0xb3ed7ddcc966f5386fab20905756f5ac4007a4c3e02fe3c53e754b4b81003541\",\"urls\":[\"bzzr://1d5b763be355780016528a5ff2cd187edc9c18c2c4d6ebd97b1c7c5c1f5adb15\"]},\"/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/SafeMath.sol\":{\"keccak256\":\"0x1a14b4d59a0db2db9fef41b2a1d6f0ffc96bec10355e2564deb0597c411a78ff\",\"urls\":[\"bzzr://862ddf33f902e9062e1bf645a4fdca5be4e1c7ef1045cc6d0680def6c82f749a\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555068056bc75e2d63100000600d81905550620186a0600e8190555060c8600f819055506103e86010819055506064601181905550600a6012819055506002601960006101000a81548160ff02191690836002811115620000ae57fe5b02179055506001601681905550620000d733600a620000dd640100000000026401000000009004565b62000271565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200011a57600080fd5b6200013f81600254620002526401000000000262004756179091906401000000009004565b600281905550620001a6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002526401000000000262004756179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101515156200026757fe5b8091505092915050565b614cbe80620002816000396000f3fe6080604052600436106102b3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062afc9e2146102b857806306fdde03146103c0578063095ea7b3146104505780630bcb257f146104c35780630d078a9d146104ee578063175032661461050557806318160ddd146105405780631b4b26fd1461056b5780631e0afe57146105a65780631e63f293146106125780632055bd081461063d57806323b872dd1461077e57806329c77347146108115780632a51becf1461092e5780632e97766d14610a0a578063313ce56714610a35578063370c29f914610a6c5780633950935114610aa75780634152299714610b1a57806345de2ca014610bce578063483f021914610d0f5780634b20d5d514610d265780634b7b03cf14610d515780634c95b44814610e055780634dc8872914610e305780635126670614610ef857806355e5ae0414610f335780635743026414610f5e5780635f0935531461103a578063639f84991461107557806367cb92db146111305780636898f82b1461115b5780636cbc2ded146111965780636dfc331c146111ad57806370a082311461123d578063786b844b146112a25780637aede272146112b95780638da5cb5b146113fa5780638f3333411461145157806395d89b41146115c35780639d05e9ab146116535780639f615ee11461172f578063a457c2d71461175a578063a9059cbb146117cd578063b6e91ae414611840578063bcc21cf61461186b578063beaf3b0d14611896578063d458be7b146118d1578063d74b10a5146118fc578063d9dcc115146119d8578063dd62ed3e14611b34578063e09c813614611bb9578063e7ac022d14611c25578063e971cee414611c50578063f2fde38b14611c7b578063f4343df414611ccc578063f483977214611e1e578063f85ba57414611e59575b600080fd5b3480156102c457600080fd5b5061037e600480360360208110156102db57600080fd5b81019080803590602001906401000000008111156102f857600080fd5b82018360208201111561030a57600080fd5b8035906020019184600183028401116401000000008311171561032c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e9e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103cc57600080fd5b506103d5611f49565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104155780820151818401526020810190506103fa565b50505050905090810190601f1680156104425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045c57600080fd5b506104a96004803603604081101561047357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f82565b604051808215151515815260200191505060405180910390f35b3480156104cf57600080fd5b506104d8611f99565b6040518082815260200191505060405180910390f35b3480156104fa57600080fd5b50610503611fa3565b005b34801561051157600080fd5b5061053e6004803603602081101561052857600080fd5b81019080803590602001909291905050506120dc565b005b34801561054c57600080fd5b50610555612142565b6040518082815260200191505060405180910390f35b34801561057757600080fd5b506105a46004803603602081101561058e57600080fd5b810190808035906020019092919050505061214c565b005b3480156105b257600080fd5b506105bb6121b2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105fe5780820151818401526020810190506105e3565b505050509050019250505060405180910390f35b34801561061e57600080fd5b50610627612247565b6040518082815260200191505060405180910390f35b34801561064957600080fd5b506107036004803603602081101561066057600080fd5b810190808035906020019064010000000081111561067d57600080fd5b82018360208201111561068f57600080fd5b803590602001918460018302840111640100000000831117156106b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612251565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610743578082015181840152602081019050610728565b50505050905090810190601f1680156107705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561078a57600080fd5b506107f7600480360360608110156107a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061236a565b604051808215151515815260200191505060405180910390f35b34801561081d57600080fd5b506108d76004803603602081101561083457600080fd5b810190808035906020019064010000000081111561085157600080fd5b82018360208201111561086357600080fd5b8035906020019184600183028401116401000000008311171561088557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061241b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561091a5780820151818401526020810190506108ff565b505050509050019250505060405180910390f35b34801561093a57600080fd5b506109f46004803603602081101561095157600080fd5b810190808035906020019064010000000081111561096e57600080fd5b82018360208201111561098057600080fd5b803590602001918460018302840111640100000000831117156109a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124de565b6040518082815260200191505060405180910390f35b348015610a1657600080fd5b50610a1f6125a5565b6040518082815260200191505060405180910390f35b348015610a4157600080fd5b50610a4a6125ad565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610a7857600080fd5b50610aa560048036036020811015610a8f57600080fd5b81019080803590602001909291905050506125b2565b005b348015610ab357600080fd5b50610b0060048036036040811015610aca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612618565b604051808215151515815260200191505060405180910390f35b348015610b2657600080fd5b50610b5360048036036020811015610b3d57600080fd5b81019080803590602001909291905050506126bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b93578082015181840152602081019050610b78565b50505050905090810190601f168015610bc05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bda57600080fd5b50610c9460048036036020811015610bf157600080fd5b8101908080359060200190640100000000811115610c0e57600080fd5b820183602082011115610c2057600080fd5b80359060200191846001830284011164010000000083111715610c4257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612772565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cd4578082015181840152602081019050610cb9565b50505050905090810190601f168015610d015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d1b57600080fd5b50610d24612895565b005b348015610d3257600080fd5b50610d3b612a2e565b6040518082815260200191505060405180910390f35b348015610d5d57600080fd5b50610d8a60048036036020811015610d7457600080fd5b8101908080359060200190929190505050612a3b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dca578082015181840152602081019050610daf565b50505050905090810190601f168015610df75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e1157600080fd5b50610e1a612af3565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610ef660048036036020811015610e5357600080fd5b8101908080359060200190640100000000811115610e7057600080fd5b820183602082011115610e8257600080fd5b80359060200191846001830284011164010000000083111715610ea457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612afd565b005b348015610f0457600080fd5b50610f3160048036036020811015610f1b57600080fd5b8101908080359060200190929190505050612c77565b005b348015610f3f57600080fd5b50610f48612cdd565b6040518082815260200191505060405180910390f35b348015610f6a57600080fd5b5061102460048036036020811015610f8157600080fd5b8101908080359060200190640100000000811115610f9e57600080fd5b820183602082011115610fb057600080fd5b80359060200191846001830284011164010000000083111715610fd257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ced565b6040518082815260200191505060405180910390f35b34801561104657600080fd5b506110736004803603602081101561105d57600080fd5b8101908080359060200190929190505050612db4565b005b61112e6004803603602081101561108b57600080fd5b81019080803590602001906401000000008111156110a857600080fd5b8201836020820111156110ba57600080fd5b803590602001918460018302840111640100000000831117156110dc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612e1a565b005b34801561113c57600080fd5b50611145612fc0565b6040518082815260200191505060405180910390f35b34801561116757600080fd5b506111946004803603602081101561117e57600080fd5b8101908080359060200190929190505050612fca565b005b3480156111a257600080fd5b506111ab6130cd565b005b3480156111b957600080fd5b506111c26131b0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112025780820151818401526020810190506111e7565b50505050905090810190601f16801561122f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561124957600080fd5b5061128c6004803603602081101561126057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132ea565b6040518082815260200191505060405180910390f35b3480156112ae57600080fd5b506112b7613332565b005b3480156112c557600080fd5b5061137f600480360360208110156112dc57600080fd5b81019080803590602001906401000000008111156112f957600080fd5b82018360208201111561130b57600080fd5b8035906020019184600183028401116401000000008311171561132d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506133e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156113bf5780820151818401526020810190506113a4565b50505050905090810190601f1680156113ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561140657600080fd5b5061140f61350b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6115c16004803603606081101561146757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156114a457600080fd5b8201836020820111156114b657600080fd5b803590602001918460018302840111640100000000831117156114d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561153b57600080fd5b82018360208201111561154d57600080fd5b8035906020019184600183028401116401000000008311171561156f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613531565b005b3480156115cf57600080fd5b506115d8613768565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116185780820151818401526020810190506115fd565b50505050905090810190601f1680156116455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561165f57600080fd5b506117196004803603602081101561167657600080fd5b810190808035906020019064010000000081111561169357600080fd5b8201836020820111156116a557600080fd5b803590602001918460018302840111640100000000831117156116c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506137a1565b6040518082815260200191505060405180910390f35b34801561173b57600080fd5b5061174461382c565b6040518082815260200191505060405180910390f35b34801561176657600080fd5b506117b36004803603604081101561177d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613873565b604051808215151515815260200191505060405180910390f35b3480156117d957600080fd5b50611826600480360360408110156117f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613918565b604051808215151515815260200191505060405180910390f35b34801561184c57600080fd5b5061185561392f565b6040518082815260200191505060405180910390f35b34801561187757600080fd5b50611880613939565b6040518082815260200191505060405180910390f35b3480156118a257600080fd5b506118cf600480360360208110156118b957600080fd5b810190808035906020019092919050505061395d565b005b3480156118dd57600080fd5b506118e66139c3565b6040518082815260200191505060405180910390f35b34801561190857600080fd5b506119c26004803603602081101561191f57600080fd5b810190808035906020019064010000000081111561193c57600080fd5b82018360208201111561194e57600080fd5b8035906020019184600183028401116401000000008311171561197057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506139d0565b6040518082815260200191505060405180910390f35b611b32600480360360608110156119ee57600080fd5b810190808035906020019092919080359060200190640100000000811115611a1557600080fd5b820183602082011115611a2757600080fd5b80359060200191846001830284011164010000000083111715611a4957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115611aac57600080fd5b820183602082011115611abe57600080fd5b80359060200191846001830284011164010000000083111715611ae057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613a5b565b005b348015611b4057600080fd5b50611ba360048036036040811015611b5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613cb7565b6040518082815260200191505060405180910390f35b348015611bc557600080fd5b50611bce613d3e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611c11578082015181840152602081019050611bf6565b505050509050019250505060405180910390f35b348015611c3157600080fd5b50611c3a613dd3565b6040518082815260200191505060405180910390f35b348015611c5c57600080fd5b50611c65613e59565b6040518082815260200191505060405180910390f35b348015611c8757600080fd5b50611cca60048036036020811015611c9e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613e63565b005b611e1c60048036036040811015611ce257600080fd5b8101908080359060200190640100000000811115611cff57600080fd5b820183602082011115611d1157600080fd5b80359060200191846001830284011164010000000083111715611d3357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115611d9657600080fd5b820183602082011115611da857600080fd5b80359060200191846001830284011164010000000083111715611dca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613fbb565b005b348015611e2a57600080fd5b50611e5760048036036020811015611e4157600080fd5b81019080803590602001909291905050506142c4565b005b348015611e6557600080fd5b50611e9c60048036036040811015611e7c57600080fd5b81019080803590602001909291908035906020019092919050505061432a565b005b600060046000600a846040518082805190602001908083835b602083101515611edc5780518252602082019150602081019050602083039250611eb7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6040805190810160405280600981526020017f636f696e756e696f6e000000000000000000000000000000000000000000000081525081565b6000611f8f33848461440e565b6001905092915050565b6000601754905090565b60016002811115611fb057fe5b601960009054906101000a900460ff166002811115611fcb57fe5b141515611fd757600080fd5b601a60000154601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561202957600080fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001601a600101600082825401925050819055506000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561213857600080fd5b8060108190555050565b6000600254905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121a857600080fd5b8060168190555050565b6060600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561223d57602002820191906000526020600020905b815481526020019060010190808311612229575b5050505050905090565b6000601354905090565b60606000828051906020012060019004905060046000600b600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235d5780601f106123325761010080835404028352916020019161235d565b820191906000526020600020905b81548152906001019060200180831161234057829003601f168201915b5050505050915050919050565b6000612377848484614571565b612410843361240b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b61440e565b600190509392505050565b60606006826040518082805190602001908083835b6020831015156124555780518252602082019150602081019050602083039250612430565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054806020026020016040519081016040528092919081815260200182805480156124d257602002820191906000526020600020905b8154815260200190600101908083116124be575b50505050509050919050565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060046000858051906020012060019004815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600043905090565b601281565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561260e57600080fd5b8060128190555050565b60006126b333846126ae85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461475690919063ffffffff16565b61440e565b6001905092915050565b6060600760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127665780601f1061273b57610100808354040283529160200191612766565b820191906000526020600020905b81548152906001019060200180831161274957829003601f168201915b50505050509050919050565b606060046000600a846040518082805190602001908083835b6020831015156127b0578051825260208201915060208101905060208303925061278b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205481526020019081526020016000206005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128895780601f1061285e57610100808354040283529160200191612889565b820191906000526020600020905b81548152906001019060200180831161286c57829003601f168201915b50505050509050919050565b60011515601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156128f457600080fd5b60028081111561290057fe5b601960009054906101000a900460ff16600281111561291b57fe5b14151561292757600080fd5b601a60000154601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561297957600080fd5b60001515601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a905050503373ffffffffffffffffffffffffffffffffffffffff166108fc612a00601a60010154601a6000015461477490919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015612a2b573d6000803e3d6000fd5b50565b6000601a60000154905090565b6060600460008381526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ae75780601f10612abc57610100808354040283529160200191612ae7565b820191906000526020600020905b815481529060010190602001808311612aca57829003601f168201915b50505050509050919050565b6000601254905090565b600081805190602001206001900490506000600460008381526020019081526020016000206003015414151515612b3357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612ba357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc60046000848152602001908152602001600020600401549081150290604051600060405180830381858888f19350505050158015612bff573d6000803e3d6000fd5b5060006004600083815260200190815260200160002060040181905550600060046000838152602001908152602001600020600301819055506020604051908101604052806000815250600460008381526020019081526020016000206005019080519060200190612c72929190614bed565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612cd357600080fd5b80600f8190555050565b6000612ce8336132ea565b905090565b6000600c600060046000858051906020012060019004815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e1057600080fd5b8060118190555050565b600081805190602001206001900490506000600460008381526020019081526020016000206003015414151515612e5057600080fd5b34600460008381526020019081526020016000206004015460046000848152602001908152602001600020600301540310151515612e8d57600080fd5b6000600f5434811515612e9c57fe5b0490506000349050818103905080600460008581526020019081526020016000206004016000828254019250508190555080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006004600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550612fa160028361477490919063ffffffff16565b601360008282540192505081905550612fba338361478f565b50505050565b6000601154905090565b6000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561301857600080fd5b60165460175403431115151561302d57600080fd5b6000600281111561303a57fe5b601960009054906101000a900460ff16600281111561305557fe5b14151561306157600080fd5b60185461306d336132ea565b1015151561307a57600080fd5b613086336018546148e3565b80601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561312957600080fd5b6000600281111561313657fe5b601960009054906101000a900460ff16600281111561315157fe5b14151561315d57600080fd5b601754431015151561316e57600080fd5b601354601a600001819055506001601960006101000a81548160ff0219169083600281111561319957fe5b021790555060006013819055506000601781905550565b60606002808111156131be57fe5b601960009054906101000a900460ff1660028111156131d957fe5b141561321c576040805190810160405280602081526020017f6a657578206665726d65203a2072656375706572657220766f73206761696e7381525090506132e7565b6001600281111561322957fe5b601960009054906101000a900460ff16600281111561324457fe5b14156132ae57606060405190810160405280602181526020017f6a657578207465726d696e65203a206465636c6172657220766f73206761696e81526020017f730000000000000000000000000000000000000000000000000000000000000081525090506132e7565b6040805190810160405280600d81526020017f6a65757820656e20636f7572730000000000000000000000000000000000000081525090505b90565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561338e57600080fd5b6001600281111561339b57fe5b601960009054906101000a900460ff1660028111156133b657fe5b1415156133c257600080fd5b6002601960006101000a81548160ff021916908360028111156133e157fe5b0217905550565b606060046000600a846040518082805190602001908083835b6020831015156134265780518252602082019150602081019050602083039250613401565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205481526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134ff5780601f106134d4576101008083540402835291602001916134ff565b820191906000526020600020905b8154815290600101906020018083116134e257829003601f168201915b50505050509050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3460115414151561354157600080fd5b60008180519060200120600190049050600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156135c257600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166009846040518082805190602001908083835b60208310151561361157805182526020820191506020810190506020830392506135ec565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561368757600080fd5b60008380519060200120600190049050600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550336004600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061376183858385614a37565b5050505050565b6040805190810160405280600581526020017f554e494f4e00000000000000000000000000000000000000000000000000000081525081565b600060046000600a846040518082805190602001908083835b6020831015156137df57805182526020820191506020810190506020830392506137ba565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020548152602001908152602001600020600401549050919050565b6000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600061390e338461390985600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b61440e565b6001905092915050565b6000613925338484614571565b6001905092915050565b6000601854905090565b60006016546017541015613950576000905061395a565b6016546017540390505b90565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156139b957600080fd5b80600d8190555050565b6000601a60010154905090565b600060046000600a846040518082805190602001908083835b602083101515613a0e57805182526020820191506020810190506020830392506139e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020548152602001908152602001600020600301549050919050565b60125434141515613a6b57600080fd5b600e5483111515613a7b57600080fd5b600d5483101515613a8b57600080fd5b600082805190602001206001900490503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613b0b57600080fd5b60006004600083815260200190815260200160002060030154141515613b3057600080fd5b83600460008381526020019081526020016000206003018190555081600460008381526020019081526020016000206005019080519060200190613b75929190614bed565b507fdc9d3a39aef8f13151f130d0bb7d4d7b099f9ac3fc92b57e3811a478eaf81b596004600083815260200190815260200160002060020184604051808060200180602001838103835285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015613c3b5780601f10613c1057610100808354040283529160200191613c3b565b820191906000526020600020905b815481529060010190602001808311613c1e57829003601f168201915b5050838103825284818151815260200191508051906020019080838360005b83811015613c75578082015181840152602081019050613c5a565b50505050905090810190601f168015613ca25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015613dc957602002820191906000526020600020905b815481526020019060010190808311613db5575b5050505050905090565b6000801515601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415613e365760009050613e56565b613e53601a60010154601a6000015461477490919063ffffffff16565b90505b90565b6000601054905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613ebf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613efb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b34601054141515613fcb57600080fd5b60008280519060200120600190049050600073ffffffffffffffffffffffffffffffffffffffff166009846040518082805190602001908083835b60208310151561402b5780518252602082019150602081019050602083039250614006565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156140a157600080fd5b60008280519060200120600190049050600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561412257600080fd5b336004600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360076000848152602001908152602001600020908051906020019061419e929190614bed565b50336009856040518082805190602001908083835b6020831015156141d857805182526020820191506020810190506020830392506141b3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190915055506142be83858484614a37565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561432057600080fd5b80600e8190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561438657600080fd5b601654601754034310151561439a57600080fd5b6002808111156143a657fe5b601960009054906101000a900460ff1660028111156143c157fe5b1415156143cd57600080fd5b6000601a6001018190555080601781905550816018819055506000601960006101000a81548160ff0219169083600281111561440557fe5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561444a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561448657600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156145ad57600080fd5b6145fe816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614691816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461475690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115151561474b57fe5b818303905092915050565b600080828401905083811015151561476a57fe5b8091505092915050565b600080828481151561478257fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156147cb57600080fd5b6147e08160025461475690919063ffffffff16565b600281905550614837816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461475690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561491f57600080fd5b6149348160025461473d90919063ffffffff16565b60028190555061498b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b83600460008381526020019081526020016000206001019080519060200190614a61929190614bed565b5082600460008381526020019081526020016000206002019080519060200190614a8c929190614bed565b506006836040518082805190602001908083835b602083101515614ac55780518252602082019150602081019050602083039250614aa0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902081908060018154018082558091505090600182039060005260206000200160009091929091909150555080600a856040518082805190602001908083835b602083101515614b5b5780518252602082019150602081019050602083039250614b36565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208190555080600b600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614c2e57805160ff1916838001178555614c5c565b82800160010185558215614c5c579182015b82811115614c5b578251825591602001919060010190614c40565b5b509050614c699190614c6d565b5090565b614c8f91905b80821115614c8b576000816000905550600101614c73565b5090565b9056fea165627a7a7230582079c28155571faa737607961cac4931e93747b24861725613c18ddb77e0ea05d10029",
  "deployedBytecode": "0x6080604052600436106102b3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062afc9e2146102b857806306fdde03146103c0578063095ea7b3146104505780630bcb257f146104c35780630d078a9d146104ee578063175032661461050557806318160ddd146105405780631b4b26fd1461056b5780631e0afe57146105a65780631e63f293146106125780632055bd081461063d57806323b872dd1461077e57806329c77347146108115780632a51becf1461092e5780632e97766d14610a0a578063313ce56714610a35578063370c29f914610a6c5780633950935114610aa75780634152299714610b1a57806345de2ca014610bce578063483f021914610d0f5780634b20d5d514610d265780634b7b03cf14610d515780634c95b44814610e055780634dc8872914610e305780635126670614610ef857806355e5ae0414610f335780635743026414610f5e5780635f0935531461103a578063639f84991461107557806367cb92db146111305780636898f82b1461115b5780636cbc2ded146111965780636dfc331c146111ad57806370a082311461123d578063786b844b146112a25780637aede272146112b95780638da5cb5b146113fa5780638f3333411461145157806395d89b41146115c35780639d05e9ab146116535780639f615ee11461172f578063a457c2d71461175a578063a9059cbb146117cd578063b6e91ae414611840578063bcc21cf61461186b578063beaf3b0d14611896578063d458be7b146118d1578063d74b10a5146118fc578063d9dcc115146119d8578063dd62ed3e14611b34578063e09c813614611bb9578063e7ac022d14611c25578063e971cee414611c50578063f2fde38b14611c7b578063f4343df414611ccc578063f483977214611e1e578063f85ba57414611e59575b600080fd5b3480156102c457600080fd5b5061037e600480360360208110156102db57600080fd5b81019080803590602001906401000000008111156102f857600080fd5b82018360208201111561030a57600080fd5b8035906020019184600183028401116401000000008311171561032c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e9e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103cc57600080fd5b506103d5611f49565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104155780820151818401526020810190506103fa565b50505050905090810190601f1680156104425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045c57600080fd5b506104a96004803603604081101561047357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f82565b604051808215151515815260200191505060405180910390f35b3480156104cf57600080fd5b506104d8611f99565b6040518082815260200191505060405180910390f35b3480156104fa57600080fd5b50610503611fa3565b005b34801561051157600080fd5b5061053e6004803603602081101561052857600080fd5b81019080803590602001909291905050506120dc565b005b34801561054c57600080fd5b50610555612142565b6040518082815260200191505060405180910390f35b34801561057757600080fd5b506105a46004803603602081101561058e57600080fd5b810190808035906020019092919050505061214c565b005b3480156105b257600080fd5b506105bb6121b2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105fe5780820151818401526020810190506105e3565b505050509050019250505060405180910390f35b34801561061e57600080fd5b50610627612247565b6040518082815260200191505060405180910390f35b34801561064957600080fd5b506107036004803603602081101561066057600080fd5b810190808035906020019064010000000081111561067d57600080fd5b82018360208201111561068f57600080fd5b803590602001918460018302840111640100000000831117156106b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612251565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610743578082015181840152602081019050610728565b50505050905090810190601f1680156107705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561078a57600080fd5b506107f7600480360360608110156107a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061236a565b604051808215151515815260200191505060405180910390f35b34801561081d57600080fd5b506108d76004803603602081101561083457600080fd5b810190808035906020019064010000000081111561085157600080fd5b82018360208201111561086357600080fd5b8035906020019184600183028401116401000000008311171561088557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061241b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561091a5780820151818401526020810190506108ff565b505050509050019250505060405180910390f35b34801561093a57600080fd5b506109f46004803603602081101561095157600080fd5b810190808035906020019064010000000081111561096e57600080fd5b82018360208201111561098057600080fd5b803590602001918460018302840111640100000000831117156109a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124de565b6040518082815260200191505060405180910390f35b348015610a1657600080fd5b50610a1f6125a5565b6040518082815260200191505060405180910390f35b348015610a4157600080fd5b50610a4a6125ad565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610a7857600080fd5b50610aa560048036036020811015610a8f57600080fd5b81019080803590602001909291905050506125b2565b005b348015610ab357600080fd5b50610b0060048036036040811015610aca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612618565b604051808215151515815260200191505060405180910390f35b348015610b2657600080fd5b50610b5360048036036020811015610b3d57600080fd5b81019080803590602001909291905050506126bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b93578082015181840152602081019050610b78565b50505050905090810190601f168015610bc05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bda57600080fd5b50610c9460048036036020811015610bf157600080fd5b8101908080359060200190640100000000811115610c0e57600080fd5b820183602082011115610c2057600080fd5b80359060200191846001830284011164010000000083111715610c4257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612772565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cd4578082015181840152602081019050610cb9565b50505050905090810190601f168015610d015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d1b57600080fd5b50610d24612895565b005b348015610d3257600080fd5b50610d3b612a2e565b6040518082815260200191505060405180910390f35b348015610d5d57600080fd5b50610d8a60048036036020811015610d7457600080fd5b8101908080359060200190929190505050612a3b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dca578082015181840152602081019050610daf565b50505050905090810190601f168015610df75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e1157600080fd5b50610e1a612af3565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610ef660048036036020811015610e5357600080fd5b8101908080359060200190640100000000811115610e7057600080fd5b820183602082011115610e8257600080fd5b80359060200191846001830284011164010000000083111715610ea457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612afd565b005b348015610f0457600080fd5b50610f3160048036036020811015610f1b57600080fd5b8101908080359060200190929190505050612c77565b005b348015610f3f57600080fd5b50610f48612cdd565b6040518082815260200191505060405180910390f35b348015610f6a57600080fd5b5061102460048036036020811015610f8157600080fd5b8101908080359060200190640100000000811115610f9e57600080fd5b820183602082011115610fb057600080fd5b80359060200191846001830284011164010000000083111715610fd257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ced565b6040518082815260200191505060405180910390f35b34801561104657600080fd5b506110736004803603602081101561105d57600080fd5b8101908080359060200190929190505050612db4565b005b61112e6004803603602081101561108b57600080fd5b81019080803590602001906401000000008111156110a857600080fd5b8201836020820111156110ba57600080fd5b803590602001918460018302840111640100000000831117156110dc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612e1a565b005b34801561113c57600080fd5b50611145612fc0565b6040518082815260200191505060405180910390f35b34801561116757600080fd5b506111946004803603602081101561117e57600080fd5b8101908080359060200190929190505050612fca565b005b3480156111a257600080fd5b506111ab6130cd565b005b3480156111b957600080fd5b506111c26131b0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112025780820151818401526020810190506111e7565b50505050905090810190601f16801561122f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561124957600080fd5b5061128c6004803603602081101561126057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132ea565b6040518082815260200191505060405180910390f35b3480156112ae57600080fd5b506112b7613332565b005b3480156112c557600080fd5b5061137f600480360360208110156112dc57600080fd5b81019080803590602001906401000000008111156112f957600080fd5b82018360208201111561130b57600080fd5b8035906020019184600183028401116401000000008311171561132d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506133e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156113bf5780820151818401526020810190506113a4565b50505050905090810190601f1680156113ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561140657600080fd5b5061140f61350b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6115c16004803603606081101561146757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156114a457600080fd5b8201836020820111156114b657600080fd5b803590602001918460018302840111640100000000831117156114d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561153b57600080fd5b82018360208201111561154d57600080fd5b8035906020019184600183028401116401000000008311171561156f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613531565b005b3480156115cf57600080fd5b506115d8613768565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116185780820151818401526020810190506115fd565b50505050905090810190601f1680156116455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561165f57600080fd5b506117196004803603602081101561167657600080fd5b810190808035906020019064010000000081111561169357600080fd5b8201836020820111156116a557600080fd5b803590602001918460018302840111640100000000831117156116c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506137a1565b6040518082815260200191505060405180910390f35b34801561173b57600080fd5b5061174461382c565b6040518082815260200191505060405180910390f35b34801561176657600080fd5b506117b36004803603604081101561177d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613873565b604051808215151515815260200191505060405180910390f35b3480156117d957600080fd5b50611826600480360360408110156117f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613918565b604051808215151515815260200191505060405180910390f35b34801561184c57600080fd5b5061185561392f565b6040518082815260200191505060405180910390f35b34801561187757600080fd5b50611880613939565b6040518082815260200191505060405180910390f35b3480156118a257600080fd5b506118cf600480360360208110156118b957600080fd5b810190808035906020019092919050505061395d565b005b3480156118dd57600080fd5b506118e66139c3565b6040518082815260200191505060405180910390f35b34801561190857600080fd5b506119c26004803603602081101561191f57600080fd5b810190808035906020019064010000000081111561193c57600080fd5b82018360208201111561194e57600080fd5b8035906020019184600183028401116401000000008311171561197057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506139d0565b6040518082815260200191505060405180910390f35b611b32600480360360608110156119ee57600080fd5b810190808035906020019092919080359060200190640100000000811115611a1557600080fd5b820183602082011115611a2757600080fd5b80359060200191846001830284011164010000000083111715611a4957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115611aac57600080fd5b820183602082011115611abe57600080fd5b80359060200191846001830284011164010000000083111715611ae057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613a5b565b005b348015611b4057600080fd5b50611ba360048036036040811015611b5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613cb7565b6040518082815260200191505060405180910390f35b348015611bc557600080fd5b50611bce613d3e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611c11578082015181840152602081019050611bf6565b505050509050019250505060405180910390f35b348015611c3157600080fd5b50611c3a613dd3565b6040518082815260200191505060405180910390f35b348015611c5c57600080fd5b50611c65613e59565b6040518082815260200191505060405180910390f35b348015611c8757600080fd5b50611cca60048036036020811015611c9e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613e63565b005b611e1c60048036036040811015611ce257600080fd5b8101908080359060200190640100000000811115611cff57600080fd5b820183602082011115611d1157600080fd5b80359060200191846001830284011164010000000083111715611d3357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115611d9657600080fd5b820183602082011115611da857600080fd5b80359060200191846001830284011164010000000083111715611dca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613fbb565b005b348015611e2a57600080fd5b50611e5760048036036020811015611e4157600080fd5b81019080803590602001909291905050506142c4565b005b348015611e6557600080fd5b50611e9c60048036036040811015611e7c57600080fd5b81019080803590602001909291908035906020019092919050505061432a565b005b600060046000600a846040518082805190602001908083835b602083101515611edc5780518252602082019150602081019050602083039250611eb7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6040805190810160405280600981526020017f636f696e756e696f6e000000000000000000000000000000000000000000000081525081565b6000611f8f33848461440e565b6001905092915050565b6000601754905090565b60016002811115611fb057fe5b601960009054906101000a900460ff166002811115611fcb57fe5b141515611fd757600080fd5b601a60000154601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561202957600080fd5b6001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001601a600101600082825401925050819055506000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561213857600080fd5b8060108190555050565b6000600254905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121a857600080fd5b8060168190555050565b6060600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561223d57602002820191906000526020600020905b815481526020019060010190808311612229575b5050505050905090565b6000601354905090565b60606000828051906020012060019004905060046000600b600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235d5780601f106123325761010080835404028352916020019161235d565b820191906000526020600020905b81548152906001019060200180831161234057829003601f168201915b5050505050915050919050565b6000612377848484614571565b612410843361240b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b61440e565b600190509392505050565b60606006826040518082805190602001908083835b6020831015156124555780518252602082019150602081019050602083039250612430565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054806020026020016040519081016040528092919081815260200182805480156124d257602002820191906000526020600020905b8154815260200190600101908083116124be575b50505050509050919050565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060046000858051906020012060019004815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600043905090565b601281565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561260e57600080fd5b8060128190555050565b60006126b333846126ae85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461475690919063ffffffff16565b61440e565b6001905092915050565b6060600760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127665780601f1061273b57610100808354040283529160200191612766565b820191906000526020600020905b81548152906001019060200180831161274957829003601f168201915b50505050509050919050565b606060046000600a846040518082805190602001908083835b6020831015156127b0578051825260208201915060208101905060208303925061278b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205481526020019081526020016000206005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128895780601f1061285e57610100808354040283529160200191612889565b820191906000526020600020905b81548152906001019060200180831161286c57829003601f168201915b50505050509050919050565b60011515601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156128f457600080fd5b60028081111561290057fe5b601960009054906101000a900460ff16600281111561291b57fe5b14151561292757600080fd5b601a60000154601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561297957600080fd5b60001515601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a905050503373ffffffffffffffffffffffffffffffffffffffff166108fc612a00601a60010154601a6000015461477490919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015612a2b573d6000803e3d6000fd5b50565b6000601a60000154905090565b6060600460008381526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ae75780601f10612abc57610100808354040283529160200191612ae7565b820191906000526020600020905b815481529060010190602001808311612aca57829003601f168201915b50505050509050919050565b6000601254905090565b600081805190602001206001900490506000600460008381526020019081526020016000206003015414151515612b3357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612ba357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc60046000848152602001908152602001600020600401549081150290604051600060405180830381858888f19350505050158015612bff573d6000803e3d6000fd5b5060006004600083815260200190815260200160002060040181905550600060046000838152602001908152602001600020600301819055506020604051908101604052806000815250600460008381526020019081526020016000206005019080519060200190612c72929190614bed565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612cd357600080fd5b80600f8190555050565b6000612ce8336132ea565b905090565b6000600c600060046000858051906020012060019004815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e1057600080fd5b8060118190555050565b600081805190602001206001900490506000600460008381526020019081526020016000206003015414151515612e5057600080fd5b34600460008381526020019081526020016000206004015460046000848152602001908152602001600020600301540310151515612e8d57600080fd5b6000600f5434811515612e9c57fe5b0490506000349050818103905080600460008581526020019081526020016000206004016000828254019250508190555080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006004600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550612fa160028361477490919063ffffffff16565b601360008282540192505081905550612fba338361478f565b50505050565b6000601154905090565b6000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561301857600080fd5b60165460175403431115151561302d57600080fd5b6000600281111561303a57fe5b601960009054906101000a900460ff16600281111561305557fe5b14151561306157600080fd5b60185461306d336132ea565b1015151561307a57600080fd5b613086336018546148e3565b80601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561312957600080fd5b6000600281111561313657fe5b601960009054906101000a900460ff16600281111561315157fe5b14151561315d57600080fd5b601754431015151561316e57600080fd5b601354601a600001819055506001601960006101000a81548160ff0219169083600281111561319957fe5b021790555060006013819055506000601781905550565b60606002808111156131be57fe5b601960009054906101000a900460ff1660028111156131d957fe5b141561321c576040805190810160405280602081526020017f6a657578206665726d65203a2072656375706572657220766f73206761696e7381525090506132e7565b6001600281111561322957fe5b601960009054906101000a900460ff16600281111561324457fe5b14156132ae57606060405190810160405280602181526020017f6a657578207465726d696e65203a206465636c6172657220766f73206761696e81526020017f730000000000000000000000000000000000000000000000000000000000000081525090506132e7565b6040805190810160405280600d81526020017f6a65757820656e20636f7572730000000000000000000000000000000000000081525090505b90565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561338e57600080fd5b6001600281111561339b57fe5b601960009054906101000a900460ff1660028111156133b657fe5b1415156133c257600080fd5b6002601960006101000a81548160ff021916908360028111156133e157fe5b0217905550565b606060046000600a846040518082805190602001908083835b6020831015156134265780518252602082019150602081019050602083039250613401565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205481526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134ff5780601f106134d4576101008083540402835291602001916134ff565b820191906000526020600020905b8154815290600101906020018083116134e257829003601f168201915b50505050509050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3460115414151561354157600080fd5b60008180519060200120600190049050600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156135c257600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166009846040518082805190602001908083835b60208310151561361157805182526020820191506020810190506020830392506135ec565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561368757600080fd5b60008380519060200120600190049050600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550336004600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061376183858385614a37565b5050505050565b6040805190810160405280600581526020017f554e494f4e00000000000000000000000000000000000000000000000000000081525081565b600060046000600a846040518082805190602001908083835b6020831015156137df57805182526020820191506020810190506020830392506137ba565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020548152602001908152602001600020600401549050919050565b6000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600061390e338461390985600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b61440e565b6001905092915050565b6000613925338484614571565b6001905092915050565b6000601854905090565b60006016546017541015613950576000905061395a565b6016546017540390505b90565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156139b957600080fd5b80600d8190555050565b6000601a60010154905090565b600060046000600a846040518082805190602001908083835b602083101515613a0e57805182526020820191506020810190506020830392506139e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020548152602001908152602001600020600301549050919050565b60125434141515613a6b57600080fd5b600e5483111515613a7b57600080fd5b600d5483101515613a8b57600080fd5b600082805190602001206001900490503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613b0b57600080fd5b60006004600083815260200190815260200160002060030154141515613b3057600080fd5b83600460008381526020019081526020016000206003018190555081600460008381526020019081526020016000206005019080519060200190613b75929190614bed565b507fdc9d3a39aef8f13151f130d0bb7d4d7b099f9ac3fc92b57e3811a478eaf81b596004600083815260200190815260200160002060020184604051808060200180602001838103835285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015613c3b5780601f10613c1057610100808354040283529160200191613c3b565b820191906000526020600020905b815481529060010190602001808311613c1e57829003601f168201915b5050838103825284818151815260200191508051906020019080838360005b83811015613c75578082015181840152602081019050613c5a565b50505050905090810190601f168015613ca25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015613dc957602002820191906000526020600020905b815481526020019060010190808311613db5575b5050505050905090565b6000801515601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415613e365760009050613e56565b613e53601a60010154601a6000015461477490919063ffffffff16565b90505b90565b6000601054905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613ebf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613efb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b34601054141515613fcb57600080fd5b60008280519060200120600190049050600073ffffffffffffffffffffffffffffffffffffffff166009846040518082805190602001908083835b60208310151561402b5780518252602082019150602081019050602083039250614006565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156140a157600080fd5b60008280519060200120600190049050600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561412257600080fd5b336004600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360076000848152602001908152602001600020908051906020019061419e929190614bed565b50336009856040518082805190602001908083835b6020831015156141d857805182526020820191506020810190506020830392506141b3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190915055506142be83858484614a37565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561432057600080fd5b80600e8190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561438657600080fd5b601654601754034310151561439a57600080fd5b6002808111156143a657fe5b601960009054906101000a900460ff1660028111156143c157fe5b1415156143cd57600080fd5b6000601a6001018190555080601781905550816018819055506000601960006101000a81548160ff0219169083600281111561440557fe5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561444a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561448657600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156145ad57600080fd5b6145fe816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614691816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461475690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115151561474b57fe5b818303905092915050565b600080828401905083811015151561476a57fe5b8091505092915050565b600080828481151561478257fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156147cb57600080fd5b6147e08160025461475690919063ffffffff16565b600281905550614837816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461475690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561491f57600080fd5b6149348160025461473d90919063ffffffff16565b60028190555061498b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461473d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b83600460008381526020019081526020016000206001019080519060200190614a61929190614bed565b5082600460008381526020019081526020016000206002019080519060200190614a8c929190614bed565b506006836040518082805190602001908083835b602083101515614ac55780518252602082019150602081019050602083039250614aa0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902081908060018154018082558091505090600182039060005260206000200160009091929091909150555080600a856040518082805190602001908083835b602083101515614b5b5780518252602082019150602081019050602083039250614b36565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208190555080600b600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614c2e57805160ff1916838001178555614c5c565b82800160010185558215614c5c579182015b82811115614c5b578251825591602001919060010190614c40565b5b509050614c699190614c6d565b5090565b614c8f91905b80821115614c8b576000816000905550600101614c73565b5090565b9056fea165627a7a7230582079c28155571faa737607961cac4931e93747b24861725613c18ddb77e0ea05d10029",
  "sourceMap": "52:3256:3:-;;;412:98;8:9:-1;5:2;;;30:1;27;20:12;5:2;412:98:3;500:10:5;492:5;;:18;;;;;;;;;;;;;;;;;;1927:21:0;1914:10;:34;;;;1965:6;1952:10;:19;;;;1989:3;1975:11;:17;;;;2010:4;1996:11;:18;;;;2033:3;2018:12;:18;;;;2055:2;2040:12;:17;;;;445:20:3;437:5;;:28;;;;;;;;;;;;;;;;;;;;;;;;481:1;469:9;:13;;;;486:21;492:10;504:2;486:5;;;:21;;;:::i;:::-;52:3256;;5505:268:1;5599:1;5580:21;;:7;:21;;;;5572:30;;;;;;;;5629:23;5646:5;5629:12;;:16;;;;;;:23;;;;;:::i;:::-;5614:12;:38;;;;5684:29;5707:5;5684:9;:18;5694:7;5684:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;;:::i;:::-;5663:9;:18;5673:7;5663:18;;;;;;;;;;;;;;;:50;;;;5750:7;5729:36;;5746:1;5729:36;;;5759:5;5729:36;;;;;;;;;;;;;;;;;;5505:268;;:::o;666:125:6:-;724:7;739:9;755:1;751;:5;739:17;;770:1;765;:6;;758:14;;;;;;785:1;778:8;;;666:125;;;;:::o;52:3256:3:-;;;;;;;",
  "deployedSourceMap": "52:3256:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7600:134:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7600:134:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7600:134:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7600:134:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7600:134:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7600:134:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7600:134:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;139:41:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;139:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2348:148:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2348:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2328:71:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2328:71:3;;;;;;;;;;;;;;;;;;;;;;;1456:216;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1456:216:3;;;;;;6527:95:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6527:95:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6527:95:0;;;;;;;;;;;;;;;;;;;;505:91:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:91:1;;;;;;;;;;;;;;;;;;;;;;;2719:80:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2719:80:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2719:80:3;;;;;;;;;;;;;;;;;;;;6967:115:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6967:115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6967:115:0;;;;;;;;;;;;;;;;;2401:85:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2401:85:3;;;;;;;;;;;;;;;;;;;;;;;8533:210:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8533:210:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8533:210:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8533:210:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8533:210:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8533:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8533:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8533:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2968:228:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2968:228:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2968:228:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7084:123:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7084:123:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7084:123:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7084:123:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7084:123:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7084:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7084:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7084:123:0;;;;;;;;;;;;;;;;;8162:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8162:164:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8162:164:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8162:164:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8162:164:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8162:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8162:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2886:73:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2886:73:3;;;;;;;;;;;;;;;;;;;;;;;231:36:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;231:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;6143:102:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6143:102:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6143:102:0;;;;;;;;;;;;;;;;;;;;3721:203:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3721:203:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3721:203:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8328:99:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8328:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8328:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8328:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7209:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7209:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7209:145:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7209:145:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7209:145:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7209:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7209:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7209:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:276:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:276:3;;;;;;2801:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2801:83:3;;;;;;;;;;;;;;;;;;;;;;;7356:105:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7356:105:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7356:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7356:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6885:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6885:80:0;;;;;;;;;;;;;;;;;;;;;;;5744:397;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5744:397:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5744:397:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5744:397:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5744:397:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5744:397:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5744:397:0;;;;;;;;;;;;;;;;;;6433:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6433:92:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6433:92:0;;;;;;;;;;;;;;;;;;;;3134:82:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3134:82:3;;;;;;;;;;;;;;;;;;;;;;;7996:164:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7996:164:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7996:164:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7996:164:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7996:164:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7996:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7996:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6624:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6624:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6624:99:0;;;;;;;;;;;;;;;;;;;;5196:546;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5196:546:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5196:546:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5196:546:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5196:546:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5196:546:0;;;;;;;;;;;;;;;;;;6804:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6804:79:0;;;;;;;;;;;;;;;;;;;;;;;794:307:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:307:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;794:307:3;;;;;;;;;;;;;;;;;;;;1103:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1103:233:3;;;;;;1952:286;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1952:286:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1952:286:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:106:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:106:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;814:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:116:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1338:116:3;;;;;;7463:135:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7463:135:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7463:135:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7463:135:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7463:135:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7463:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7463:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7463:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:20:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;235:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:902:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3087:902:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3087:902:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3087:902:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3087:902:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3087:902:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3087:902:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3087:902:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3087:902:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3087:902:0;;;;;;;;;;;;;;;;;;186:39:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;186:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;186:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7866:128:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7866:128:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7866:128:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7866:128:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7866:128:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7866:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7866:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:88:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2488:88:3;;;;;;;;;;;;;;;;;;;;;;;4454:213:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4454:213:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4454:213:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1562:140:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1562:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:86:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2240:86:3;;;;;;;;;;;;;;;;;;;;;;;2578:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2578:139:3;;;;;;;;;;;;;;;;;;;;;;;6247:91:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6247:91:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6247:91:0;;;;;;;;;;;;;;;;;;;;3218:87:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3218:87:3;;;;;;;;;;;;;;;;;;;;;;;7736:128:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7736:128:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7736:128:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7736:128:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7736:128:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7736:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7736:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4406:788;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4406:788:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4406:788:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4406:788:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4406:788:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4406:788:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4406:788:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4406:788:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4406:788:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4406:788:0;;;;;;;;;;;;;;;;;;1258:131:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1258:131:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1258:131:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8429:102:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8429:102:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8429:102:0;;;;;;;;;;;;;;;;;2961:171:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2961:171:3;;;;;;;;;;;;;;;;;;;;;;;6725:77:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6725:77:0;;;;;;;;;;;;;;;;;;;;;;;825:174:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:174:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;825:174:5;;;;;;;;;;;;;;;;;;;;;;2062:1023:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2062:1023:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2062:1023:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2062:1023:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2062:1023:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2062:1023:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2062:1023:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2062:1023:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2062:1023:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2062:1023:0;;;;;;;;;;;;;;;;;;6340:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6340:91:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6340:91:0;;;;;;;;;;;;;;;;;;;;512:280:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:280:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:280:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7600:134:0;7665:7;7685:11;:36;7697:14;7712:7;7697:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7697:23:0;;;;;;;;;;;;;;;;;;;;;;7685:36;;;;;;;;;;;:46;;;;;;;;;;;;7678:53;;7600:134;;;:::o;139:41:1:-;;;;;;;;;;;;;;;;;;;;:::o;2348:148::-;2413:4;2430:36;2439:10;2451:7;2460:5;2430:8;:36::i;:::-;2484:4;2477:11;;2348:148;;;;:::o;2328:71:3:-;2371:4;2388:8;;2381:15;;2328:71;:::o;1456:216::-;1503:21;1494:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;1486:39;;;;;;;;1563:10;:19;;;1537:10;:22;1548:10;1537:22;;;;;;;;;;;;;;;;:45;1529:54;;;;;;;;1605:4;1587:3;:15;1591:10;1587:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1638:1;1613:10;:21;;;:26;;;;;;;;;;;1668:1;1643:10;:22;1654:10;1643:22;;;;;;;;;;;;;;;:26;;;;1456:216::o;6527:95:0:-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;6608:11:0;6594;:25;;;;6527:95;:::o;505:91:1:-;549:7;576:12;;569:19;;505:91;:::o;2719:80:3:-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;2791:5:3;2779:9;:17;;;;2719:80;:::o;6967:115:0:-;7020:13;7046:21;:33;7068:10;7046:33;;;;;;;;;;;;;;;7039:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6967:115;:::o;2401:85:3:-;2450:4;2467:16;;2460:23;;2401:85;:::o;8533:210:0:-;8603:13;8622;8659:7;8643:25;;;;;;8638:31;;;8622:47;;8680:11;:53;8692:18;:28;8711:8;8692:28;;;;;;;;;;;:40;8721:10;8692:40;;;;;;;;;;;;;;;;8680:53;;;;;;;;;;;:60;;8673:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8533:210;;;:::o;2968:228:1:-;3047:4;3064:26;3074:4;3080:2;3084:5;3064:9;:26::i;:::-;3101:65;3110:4;3116:10;3128:37;3159:5;3128:8;:14;3137:4;3128:14;;;;;;;;;;;;;;;:26;3143:10;3128:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3101:8;:65::i;:::-;3184:4;3177:11;;2968:228;;;;;:::o;7084:123:0:-;7148:13;7174:21;7196:7;7174:30;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7174:30:0;;;;;;;;;;;;;;;;;;;;;7167:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7084:123;;;:::o;8162:164::-;8229:4;8246:9;:21;8256:10;8246:21;;;;;;;;;;;;;;;:77;8268:11;:44;8301:7;8285:25;;;;;;8280:31;;;8268:44;;;;;;;;;;;:54;;;;;;;;;;;;8246:77;;;;;;;;;;;;;;;;8239:84;;8162:164;;;:::o;2886:73:3:-;2927:4;2944:12;2937:19;;2886:73;:::o;231:36:1:-;265:2;231:36;:::o;6143:102:0:-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;6229:13:0;6214:12;:28;;;;6143:102;:::o;3721:203:1:-;3801:4;3818:76;3827:10;3839:7;3848:45;3882:10;3848:8;:20;3857:10;3848:20;;;;;;;;;;;;;;;:29;3869:7;3848:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3818:8;:76::i;:::-;3912:4;3905:11;;3721:203;;;;:::o;8328:99:0:-;8381:13;8407:12;:17;8420:3;8407:17;;;;;;;;;;;8400:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8328:99;;;:::o;7209:145::-;7277:13;7303:11;:36;7315:14;7330:7;7315:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7315:23:0;;;;;;;;;;;;;;;;;;;;;;7303:36;;;;;;;;;;;:48;;7296:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7209:145;;;:::o;1674:276:3:-;1737:4;1718:23;;:3;:15;1722:10;1718:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;1710:32;;;;;;;;1763:20;1754:29;;;;;;;;:5;;;;;;;;;;;:29;;;;;;;;;1746:38;;;;;;;;1822:10;:19;;;1796:10;:22;1807:10;1796:22;;;;;;;;;;;;;;;;:45;1788:54;;;;;;;;1865:5;1846:24;;:3;:15;1850:10;1846:15;;;;;;;;;;;;;;;;;;;;;;;;:24;1874:10;:19;;:73;1899:46;1923:10;:21;;;1899:10;:19;;;:23;;:46;;;;:::i;:::-;1874:73;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1874:73:3;1674:276::o;2801:83::-;2845:4;2862:10;:19;;;2855:26;;2801:83;:::o;7356:105:0:-;7409:13;7435:11;:16;7447:3;7435:16;;;;;;;;;;;:23;;7428:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7356:105;;;:::o;6885:80::-;6933:4;6950:12;;6943:19;;6885:80;:::o;5744:397::-;5802:15;5841:7;5825:25;;;;;;5820:31;;;5802:49;;5898:1;5863:11;:23;5875:10;5863:23;;;;;;;;;;;:31;;;:36;;5855:45;;;;;;;;5949:10;5912:47;;:11;:23;5924:10;5912:23;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;5904:56;;;;;;;;5964:10;:19;;:52;5984:11;:23;5996:10;5984:23;;;;;;;;;;;:31;;;5964:52;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5964:52:0;6054:1;6020:11;:23;6032:10;6020:23;;;;;;;;;;;:31;;:35;;;;6093:1;6059:11;:23;6071:10;6059:23;;;;;;;;;;;:31;;:35;;;;6098:40;;;;;;;;;;;;;:11;:23;6110:10;6098:23;;;;;;;;;;;:35;;:40;;;;;;;;;;;;:::i;:::-;;5744:397;;:::o;6433:92::-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;6511:11:0;6497;:25;;;;6433:92;:::o;3134:82:3:-;3175:4;3192:21;3202:10;3192:9;:21::i;:::-;3185:28;;3134:82;:::o;7996:164:0:-;8063:4;8080:9;:65;8090:11;:44;8123:7;8107:25;;;;;;8102:31;;;8090:44;;;;;;;;;;;:54;;;;;;;;;;;;8080:65;;;;;;;;;;;;;;;:77;8146:10;8080:77;;;;;;;;;;;;;;;;8073:84;;7996:164;;;:::o;6624:99::-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;6708:12:0;6693;:27;;;;6624:99;:::o;5196:546::-;5258:15;5297:7;5281:25;;;;;;5276:31;;;5258:49;;5354:1;5319:11;:23;5331:10;5319:23;;;;;;;;;;;:31;;;:36;;5311:45;;;;;;;;5437:9;5402:11;:23;5414:10;5402:23;;;;;;;;;;;:31;;;5368:11;:23;5380:10;5368:23;;;;;;;;;;;:31;;;:65;:78;;5360:87;;;;;;;;5451:9;5480:11;;5468:9;:23;;;;;;;;5451:41;;5496:13;5524:9;5513:20;;5549:4;5537:16;;;;5592:8;5557:11;:23;5569:10;5557:23;;;;;;;;;;;:31;;;:43;;;;;;;;;;;5664:8;5604:9;:21;5614:10;5604:21;;;;;;;;;;;;;;;:56;5626:11;:23;5638:10;5626:23;;;;;;;;;;;:33;;;;;;;;;;;;5604:56;;;;;;;;;;;;;;;;:68;;;;;;;;;;;5701:11;5710:1;5701:4;:8;;:11;;;;:::i;:::-;5676:16;;:37;;;;;;;;;;;5717:22;5723:10;5734:4;5717:5;:22::i;:::-;5196:546;;;;:::o;6804:79::-;6851:4;6868:12;;6861:19;;6804:79;:::o;794:307:3:-;870:1;844:10;:22;855:10;844:22;;;;;;;;;;;;;;;;:27;836:36;;;;;;;;910:9;;899:8;;:20;883:12;:36;;875:45;;;;;;;;940:20;931:29;;;;;;;;:5;;;;;;;;;;;:29;;;;;;;;;923:38;;;;;;;;997:19;;972:21;982:10;972:9;:21::i;:::-;:44;;964:53;;;;;;;;1021:37;1027:10;1038:19;;1021:5;:37::i;:::-;1087:11;1062:10;:22;1073:10;1062:22;;;;;;;;;;;;;;;:36;;;;794:307;:::o;1103:233::-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;1160:20:3;1151:29;;;;;;;;:5;;;;;;;;;;;:29;;;;;;;;;1143:38;;;;;;;;1209:8;;1193:12;:24;;1185:33;;;;;;;;1244:16;;1222:10;:19;;:38;;;;1272:21;1264:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;1316:1;1297:16;:20;;;;1332:1;1321:8;:12;;;;1103:233::o;1952:286::-;1997:13;2028:20;2019:29;;;;;;;;:5;;;;;;;;;;;:29;;;;;;;;;2016:220;;;2055:41;;;;;;;;;;;;;;;;;;;;;;2016:220;2121:21;2112:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;2109:127;;;2149:42;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:127;2209:22;;;;;;;;;;;;;;;;;;;;1952:286;;:::o;814:106:1:-;869:7;896:9;:16;906:5;896:16;;;;;;;;;;;;;;;;889:23;;814:106;;;:::o;1338:116:3:-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;1397:21:3;1388:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;1380:39;;;;;;;;1431:20;1423:5;;:28;;;;;;;;;;;;;;;;;;;;;;;;1338:116::o;7463:135:0:-;7526:13;7552:11;:36;7564:14;7579:7;7564:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7564:23:0;;;;;;;;;;;;;;;;;;;;;;7552:36;;;;;;;;;;;:43;;7545:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7463:135;;;:::o;235:20:5:-;;;;;;;;;;;;;:::o;3087:902:0:-;3273:9;3257:12;;:25;3249:34;;;;;;;;3333:14;3371:7;3355:25;;;;;;3350:31;;;3333:48;;3484:1;3440:46;;:11;:22;3452:9;3440:22;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;3432:55;;;;;;;;3583:10;3555:38;;:15;3571:7;3555:24;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3555:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;3547:47;;;;;;;;3659:13;3696:7;3680:25;;;;;;3675:31;;;3659:47;;3787:21;:30;3809:7;3787:30;;;;;;;;;;;;;;;3823:8;3787:45;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3787:45:0;;;;;;;;;;;;;;;;;;;;;;3923:10;3888:11;:22;3900:9;3888:22;;;;;;;;;;;:32;;;:45;;;;;;;;;;;;;;;;;;3937:49;3948:7;3957;3966:8;3976:9;3937:10;:49::i;:::-;3087:902;;;;;:::o;186:39:1:-;;;;;;;;;;;;;;;;;;;;:::o;7866:128:0:-;7930:4;7947:11;:36;7959:14;7974:7;7959:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7959:23:0;;;;;;;;;;;;;;;;;;;;;;7947:36;;;;;;;;;;;:44;;;7940:51;;7866:128;;;:::o;2488:88:3:-;2534:4;2551:10;:22;2562:10;2551:22;;;;;;;;;;;;;;;;2544:29;;2488:88;:::o;4454:213:1:-;4539:4;4556:81;4565:10;4577:7;4586:50;4620:15;4586:8;:20;4595:10;4586:20;;;;;;;;;;;;;;;:29;4607:7;4586:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4556:8;:81::i;:::-;4655:4;4648:11;;4454:213;;;;:::o;1562:140::-;1623:4;1640:32;1650:10;1662:2;1666:5;1640:9;:32::i;:::-;1690:4;1683:11;;1562:140;;;;:::o;2240:86:3:-;2287:4;2304:19;;2297:26;;2240:86;:::o;2578:139::-;2623:4;2648:9;;2637:8;;:20;2633:80;;;2672:1;2665:8;;;;2633:80;2704:9;;2693:8;;:20;2686:27;;2578:139;;:::o;6247:91:0:-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;6325:10:0;6312;:23;;;;6247:91;:::o;3218:87:3:-;3264:4;3281:10;:21;;;3274:28;;3218:87;:::o;7736:128:0:-;7800:4;7817:11;:36;7829:14;7844:7;7829:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7829:23:0;;;;;;;;;;;;;;;;;;;;;;7817:36;;;;;;;;;;;:44;;;7810:51;;7736:128;;;:::o;4406:788::-;4589:12;;4576:9;:25;4568:34;;;;;;;;4672:10;;4661:8;:21;4653:30;;;;;;;;4706:10;;4695:8;:21;4687:30;;;;;;;;4770:14;4808:7;4792:25;;;;;;4787:31;;;4770:48;;4866:10;4830:46;;:11;:22;4842:9;4830:22;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;4822:55;;;;;;;;4987:1;4953:11;:22;4965:9;4953:22;;;;;;;;;;;:30;;;:35;4945:44;;;;;;;;5064:8;5031:11;:22;5043:9;5031:22;;;;;;;;;;;:30;;:41;;;;5113:12;5076:11;:22;5088:9;5076:22;;;;;;;;;;;:34;;:49;;;;;;;;;;;;:::i;:::-;;5135:56;5152:11;:22;5164:9;5152:22;;;;;;;;;;;:29;;5183:7;5135:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5135:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4406:788;;;;:::o;1258:131:1:-;1330:7;1357:8;:15;1366:5;1357:15;;;;;;;;;;;;;;;:24;1373:7;1357:24;;;;;;;;;;;;;;;;1350:31;;1258:131;;;;:::o;8429:102:0:-;8476:13;8502:14;:26;8517:10;8502:26;;;;;;;;;;;;;;;8495:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8429:102;:::o;2961:171:3:-;3002:4;3035:5;3016:24;;:3;:15;3020:10;3016:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3012:116;;;3055:1;3048:8;;;;3012:116;3081:46;3105:10;:21;;;3081:10;:19;;;:23;;:46;;;;:::i;:::-;3069:59;;2961:171;;:::o;6725:77:0:-;6771:4;6788:11;;6781:18;;6725:77;:::o;825:174:5:-;645:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;921:1;901:22;;:8;:22;;;;893:31;;;;;;;;963:8;935:37;;956:5;;;;;;;;;;;935:37;;;;;;;;;;;;986:8;978:5;;:16;;;;;;;;;;;;;;;;;;825:174;:::o;2062:1023:0:-;2225:9;2210:11;;:24;2202:33;;;;;;;;2277:13;2314:4;2298:22;;;;;;2293:28;;;2277:44;;2410:1;2377:35;;:15;2393:4;2377:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2377:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;2369:44;;;;;;;;2462:14;2500:7;2484:25;;;;;;2479:31;;;2462:48;;2617:1;2573:46;;:11;:22;2585:9;2573:22;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;2565:55;;;;;;;;2701:10;2666:11;:22;2678:9;2666:22;;;;;;;;;;;:32;;;:45;;;;;;;;;;;;;;;;;;2740:4;2715:12;:22;2728:8;2715:22;;;;;;;;;;;:29;;;;;;;;;;;;:::i;:::-;;2823:10;2799:15;2815:4;2799:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2799:21:0;;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2926:14;:26;2941:10;2926:26;;;;;;;;;;;;;;;2958:8;2926:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2926:41:0;;;;;;;;;;;;;;;;;;;;;;3036:46;3047:7;3056:4;3062:8;3072:9;3036:10;:46::i;:::-;2062:1023;;;;:::o;6340:91::-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;6418:10:0;6405;:23;;;;6340:91;:::o;512:280:3:-;645:5:5;;;;;;;;;;;631:19;;:10;:19;;;623:28;;;;;;;;620:9:3;;609:8;;:20;594:12;:35;586:44;;;;;;;;651:20;642:29;;;;;;;;:5;;;;;;;;;;;:29;;;;;;;;;634:38;;;;;;;;700:1;676:10;:21;;:25;;;;716:9;705:8;:20;;;;751:6;729:19;:28;;;;769:20;761:5;;:28;;;;;;;;;;;;;;;;;;;;;;;;512:280;;:::o;6546:253:1:-;6658:1;6639:21;;:7;:21;;;;6631:30;;;;;;;;6697:1;6680:19;;:5;:19;;;;6672:28;;;;;;;;6739:5;6712:8;:15;6721:5;6712:15;;;;;;;;;;;;;;;:24;6728:7;6712:24;;;;;;;;;;;;;;;:32;;;;6776:7;6760:31;;6769:5;6760:31;;;6785:5;6760:31;;;;;;;;;;;;;;;;;;6546:253;;;:::o;4893:261::-;4995:1;4981:16;;:2;:16;;;;4973:25;;;;;;;;5028:26;5048:5;5028:9;:15;5038:4;5028:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5010:9;:15;5020:4;5010:15;;;;;;;;;;;;;;;:44;;;;5081:24;5099:5;5081:9;:13;5091:2;5081:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5065:9;:13;5075:2;5065:13;;;;;;;;;;;;;;;:40;;;;5136:2;5121:25;;5130:4;5121:25;;;5140:5;5121:25;;;;;;;;;;;;;;;;;;4893:261;;;:::o;552:110:6:-;610:7;637:1;632;:6;;625:14;;;;;;656:1;652;:5;645:12;;552:110;;;;:::o;666:125::-;724:7;739:9;755:1;751;:5;739:17;;770:1;765;:6;;758:14;;;;;;785:1;778:8;;;666:125;;;;:::o;283:265::-;341:7;430:9;446:1;442;:5;;;;;;;;430:17;;542:1;535:8;;;283:265;;;;:::o;5505:268:1:-;5599:1;5580:21;;:7;:21;;;;5572:30;;;;;;;;5629:23;5646:5;5629:12;;:16;;:23;;;;:::i;:::-;5614:12;:38;;;;5684:29;5707:5;5684:9;:18;5694:7;5684:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;5663:9;:18;5673:7;5663:18;;;;;;;;;;;;;;;:50;;;;5750:7;5729:36;;5746:1;5729:36;;;5759:5;5729:36;;;;;;;;;;;;;;;;;;5505:268;;:::o;6006:::-;6100:1;6081:21;;:7;:21;;;;6073:30;;;;;;;;6130:23;6147:5;6130:12;;:16;;:23;;;;:::i;:::-;6115:12;:38;;;;6185:29;6208:5;6185:9;:18;6195:7;6185:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6164:9;:18;6174:7;6164:18;;;;;;;;;;;;;;;:50;;;;6256:1;6230:36;;6239:7;6230:36;;;6260:5;6230:36;;;;;;;;;;;;;;;;;;6006:268;;:::o;3991:413:0:-;4206:7;4174:11;:22;4186:9;4174:22;;;;;;;;;;;:29;;:39;;;;;;;;;;;;:::i;:::-;;4249:7;4217:11;:22;4229:9;4217:22;;;;;;;;;;;:29;;:39;;;;;;;;;;;;:::i;:::-;;4260:21;4282:7;4260:30;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4260:30:0;;;;;;;;;;;;;;;;;;;;;4296:9;4260:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4260:46:0;;;;;;;;;;;;;;;;;;;;;;4336:9;4310:14;4325:7;4310:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4310:23:0;;;;;;;;;;;;;;;;;;;;;:35;;;;4392:9;4349:18;:28;4368:8;4349:28;;;;;;;;;;;:40;4378:10;4349:40;;;;;;;;;;;;;;;:52;;;;3991:413;;;;:::o;52:3256:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./Cagnottes.sol\";\n\ncontract Lottery is Cagnottes{\n\nmapping (address => uint) private prediction ;\nmapping (address => bool) private win ;\n\nenum LotteryState { Started, Finished, Pending }\n\nuint private blockStop;\nuint private blockEnd;\nuint private PRICE_LOTTERY_TOKEN;\n\nLotteryState private state;\n\nstruct resultat\n{\n  uint cagnotte;\n  uint nbGagnants;\n}\n\nresultat lastResult;\n\nconstructor() public\n{\n  state = LotteryState.Pending;\n  blockStop = 1;\n  _mint(msg.sender, 10);\n}\n\nfunction initierLottery(uint _price, uint _blockEnd) public onlyOwner\n{\n  require(block.number < blockEnd - blockStop);\n  require(state == LotteryState.Pending);\n  lastResult.nbGagnants = 0;\n  blockEnd = _blockEnd;\n  PRICE_LOTTERY_TOKEN = _price;\n  state = LotteryState.Started;\n}\n\nfunction play(uint _prediction) public\n{\n require(prediction[msg.sender] == 0);\n require(block.number <= blockEnd - blockStop);\n require(state == LotteryState.Started);\n require(balanceOf(msg.sender) >= PRICE_LOTTERY_TOKEN);\n  _burn(msg.sender,PRICE_LOTTERY_TOKEN);\n  prediction[msg.sender] = _prediction;\n}\n\nfunction endGame() public onlyOwner\n{\n  require(state == LotteryState.Started);\n  require(block.number >= blockEnd);\n  lastResult.cagnotte = LOTTERY_CAGNOTTE;\n  state = LotteryState.Finished;\n  LOTTERY_CAGNOTTE = 0;\n  blockEnd = 0;\n}\n\nfunction closeGame() public onlyOwner\n{\n  require(state == LotteryState.Finished);\n  state = LotteryState.Pending;\n}\n\nfunction saveWin() public\n{\n  require(state == LotteryState.Finished);\n  require(prediction[msg.sender] == lastResult.cagnotte);\n  win[msg.sender] = true;\n  lastResult.nbGagnants += 1;\n  prediction[msg.sender] = 0;\n}\n\nfunction withdrawGains() public\n{\n  require(win[msg.sender] == true);\n  require(state == LotteryState.Pending);\n  require(prediction[msg.sender] == lastResult.cagnotte);\n  win[msg.sender] == false;\n  msg.sender.transfer(uint(lastResult.cagnotte.div(lastResult.nbGagnants)));\n}\n\nfunction getStateGame() public view returns (string memory)\n{\n  if(state == LotteryState.Pending){\n    return \"jeux ferme : recuperer vos gains\";\n  }\n  else if(state == LotteryState.Finished){\n    return \"jeux termine : declarer vos gains\";\n  }\n  else{\n    return \"jeux en cours\";\n  }\n}\n\nfunction getPrixLottery() public view returns (uint)\n{\n  return PRICE_LOTTERY_TOKEN;\n}\n\nfunction getEndGame() public view returns (uint)\n{\n  return blockEnd;\n}\n\nfunction getSuperCagnotte() public view returns (uint)\n{\n  return LOTTERY_CAGNOTTE;\n}\n\nfunction getPrediction() public view returns (uint)\n{\n  return prediction[msg.sender];\n}\n\nfunction getBlockStop() public view returns (uint)\n{\n  if (blockEnd < blockStop)\n  {\n  return 0;\n  }\n  else return blockEnd - blockStop;\n\n}\n\nfunction modifierBlockStop(uint _stop) public onlyOwner\n{\n  blockStop = _stop;\n}\n\nfunction getCagnotte() public view returns (uint)\n{\n  return lastResult.cagnotte;\n}\n\nfunction getBlock() public view returns (uint)\n{\n  return block.number;\n}\n\nfunction getGains() public view returns (uint)\n{\n  if (win[msg.sender] == false)\n  {\n  return 0;\n  }\n  else return uint(lastResult.cagnotte.div(lastResult.nbGagnants));\n\n}\n\nfunction getSolde() public view returns (uint)\n{\n  return balanceOf(msg.sender);\n}\n\nfunction getNbGagnants() public view returns (uint)\n{\n  return lastResult.nbGagnants;\n}\n\n}\n",
  "sourcePath": "/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Lottery.sol",
  "ast": {
    "absolutePath": "/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        1797
      ]
    },
    "id": 1798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1347,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Cagnottes.sol",
        "file": "./Cagnottes.sol",
        "id": 1348,
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 885,
        "src": "25:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1349,
              "name": "Cagnottes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 884,
              "src": "72:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cagnottes_$884",
                "typeString": "contract Cagnottes"
              }
            },
            "id": 1350,
            "nodeType": "InheritanceSpecifier",
            "src": "72:9:3"
          }
        ],
        "contractDependencies": [
          884,
          1276,
          1345,
          1910
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1797,
        "linearizedBaseContracts": [
          1797,
          884,
          1910,
          1276,
          1345
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1354,
            "name": "prediction",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "84:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1353,
              "keyType": {
                "id": 1351,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "93:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "84:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1352,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "104:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1358,
            "name": "win",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "131:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1357,
              "keyType": {
                "id": 1355,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "140:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "131:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1356,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "151:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Lottery.LotteryState",
            "id": 1362,
            "members": [
              {
                "id": 1359,
                "name": "Started",
                "nodeType": "EnumValue",
                "src": "192:7:3"
              },
              {
                "id": 1360,
                "name": "Finished",
                "nodeType": "EnumValue",
                "src": "201:8:3"
              },
              {
                "id": 1361,
                "name": "Pending",
                "nodeType": "EnumValue",
                "src": "211:7:3"
              }
            ],
            "name": "LotteryState",
            "nodeType": "EnumDefinition",
            "src": "172:48:3"
          },
          {
            "constant": false,
            "id": 1364,
            "name": "blockStop",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "222:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1363,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "222:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1366,
            "name": "blockEnd",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "246:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1365,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "246:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1368,
            "name": "PRICE_LOTTERY_TOKEN",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "269:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1367,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "269:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1370,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "304:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LotteryState_$1362",
              "typeString": "enum Lottery.LotteryState"
            },
            "typeName": {
              "contractScope": null,
              "id": 1369,
              "name": "LotteryState",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1362,
              "src": "304:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LotteryState_$1362",
                "typeString": "enum Lottery.LotteryState"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Lottery.resultat",
            "id": 1375,
            "members": [
              {
                "constant": false,
                "id": 1372,
                "name": "cagnotte",
                "nodeType": "VariableDeclaration",
                "scope": 1375,
                "src": "353:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1371,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1374,
                "name": "nbGagnants",
                "nodeType": "VariableDeclaration",
                "scope": 1375,
                "src": "370:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1373,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "resultat",
            "nodeType": "StructDefinition",
            "scope": 1797,
            "src": "333:55:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1377,
            "name": "lastResult",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "390:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_resultat_$1375_storage",
              "typeString": "struct Lottery.resultat"
            },
            "typeName": {
              "contractScope": null,
              "id": 1376,
              "name": "resultat",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1375,
              "src": "390:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_resultat_$1375_storage_ptr",
                "typeString": "struct Lottery.resultat"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1395,
              "nodeType": "Block",
              "src": "433:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1380,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "437:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1381,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "445:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "445:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "437:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "437:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1385,
                      "name": "blockStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "469:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "481:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "469:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "469:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "492:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "492:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "504:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 1389,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "486:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1394,
                  "nodeType": "ExpressionStatement",
                  "src": "486:21:3"
                }
              ]
            },
            "documentation": null,
            "id": 1396,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:2:3"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:3"
            },
            "scope": 1797,
            "src": "412:98:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "582:210:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1406,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "594:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "594:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1408,
                            "name": "blockEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "609:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1409,
                            "name": "blockStop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "620:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "609:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "594:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "586:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "586:44:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1415,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "642:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1416,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "651:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "651:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "642:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "634:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1420,
                  "nodeType": "ExpressionStatement",
                  "src": "634:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1421,
                        "name": "lastResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "676:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_resultat_$1375_storage",
                          "typeString": "struct Lottery.resultat storage ref"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbGagnants",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1374,
                      "src": "676:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "676:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "676:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1427,
                      "name": "blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "705:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1428,
                      "name": "_blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "716:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "705:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "705:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1431,
                      "name": "PRICE_LOTTERY_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "729:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1432,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "751:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "729:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1434,
                  "nodeType": "ExpressionStatement",
                  "src": "729:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1435,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "761:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1436,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "769:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Started",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "769:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "761:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "761:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1403,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1402,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "572:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "572:9:3"
              }
            ],
            "name": "initierLottery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1398,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "536:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1400,
                  "name": "_blockEnd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "549:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:29:3"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:3"
            },
            "scope": 1797,
            "src": "512:280:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "833:268:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1447,
                            "name": "prediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "844:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1450,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1448,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "855:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "855:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "844:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "870:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "844:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "836:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "836:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1456,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "883:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "883:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1458,
                            "name": "blockEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "899:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1459,
                            "name": "blockStop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "910:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "899:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "883:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "875:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "875:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1465,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "931:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1466,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "940:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Started",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "940:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "931:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "923:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1470,
                  "nodeType": "ExpressionStatement",
                  "src": "923:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1473,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2020,
                                "src": "982:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "982:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1472,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "972:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "972:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1476,
                          "name": "PRICE_LOTTERY_TOKEN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "997:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "972:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "964:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "964:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1481,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1027:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1027:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1483,
                        "name": "PRICE_LOTTERY_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "1038:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1480,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "1021:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "1062:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1073:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1073:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1062:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1490,
                      "name": "_prediction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1443,
                      "src": "1087:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1062:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 1494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "play",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "name": "_prediction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "808:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "807:18:3"
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "833:0:3"
            },
            "scope": 1797,
            "src": "794:307:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1532,
              "nodeType": "Block",
              "src": "1139:197:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1500,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1151:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1501,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1160:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Started",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1160:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1151:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1143:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1505,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1507,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "1193:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1193:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1509,
                          "name": "blockEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1366,
                          "src": "1209:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1193:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1185:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1513,
                        "name": "lastResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "1222:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_resultat_$1375_storage",
                          "typeString": "struct Lottery.resultat storage ref"
                        }
                      },
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cagnotte",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1372,
                      "src": "1222:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1516,
                      "name": "LOTTERY_CAGNOTTE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1244:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1222:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1519,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "1264:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1520,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "1272:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Finished",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1272:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "1264:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1524,
                      "name": "LOTTERY_CAGNOTTE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1297:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1316:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1297:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1528,
                      "name": "blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "1321:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1332:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1321:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1531,
                  "nodeType": "ExpressionStatement",
                  "src": "1321:12:3"
                }
              ]
            },
            "documentation": null,
            "id": 1533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1496,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "1129:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1129:9:3"
              }
            ],
            "name": "endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:3"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:3"
            },
            "scope": 1797,
            "src": "1103:233:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "1376:78:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1539,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1388:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1540,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1397:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finished",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1397:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1388:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1380:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1545,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "1423:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1546,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "1431:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1431:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "1423:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1549,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1535,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "1366:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1366:9:3"
              }
            ],
            "name": "closeGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:3"
            },
            "returnParameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:0:3"
            },
            "scope": 1797,
            "src": "1338:116:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1591,
              "nodeType": "Block",
              "src": "1482:190:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1555,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1494:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1556,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1503:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finished",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1503:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1494:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1486:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1562,
                            "name": "prediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "1537:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1565,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1563,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "1548:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1548:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1537:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1566,
                            "name": "lastResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1563:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_resultat_$1375_storage",
                              "typeString": "struct Lottery.resultat storage ref"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cagnotte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1372,
                          "src": "1563:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1537:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1529:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1571,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "1587:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1574,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1572,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1591:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1591:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1587:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1605:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1587:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "lastResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "1613:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_resultat_$1375_storage",
                          "typeString": "struct Lottery.resultat storage ref"
                        }
                      },
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbGagnants",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1374,
                      "src": "1613:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1638:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1613:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1584,
                        "name": "prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "1643:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1587,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1585,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1654:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1654:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1643:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1668:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1643:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 1592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveWin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1472:2:3"
            },
            "returnParameters": {
              "id": 1553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:3"
            },
            "scope": 1797,
            "src": "1456:216:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1643,
              "nodeType": "Block",
              "src": "1706:244:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1596,
                            "name": "win",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "1718:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1599,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1597,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "1722:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1722:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1718:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1718:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1710:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1603,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1605,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1754:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1606,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1763:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1763:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1754:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1746:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1612,
                            "name": "prediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "1796:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1615,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1613,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "1807:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1807:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1796:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1616,
                            "name": "lastResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1822:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_resultat_$1375_storage",
                              "typeString": "struct Lottery.resultat storage ref"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cagnotte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1372,
                          "src": "1822:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1796:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1621,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "1846:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1624,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1622,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1850:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1850:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1846:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1865:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1846:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1637,
                                  "name": "lastResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "1923:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                    "typeString": "struct Lottery.resultat storage ref"
                                  }
                                },
                                "id": 1638,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nbGagnants",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1374,
                                "src": "1923:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1634,
                                  "name": "lastResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "1899:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                    "typeString": "struct Lottery.resultat storage ref"
                                  }
                                },
                                "id": 1635,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cagnotte",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1372,
                                "src": "1899:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1960,
                              "src": "1899:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1899:46:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1894:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1894:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1874:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1874:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1874:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1642,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:73:3"
                }
              ]
            },
            "documentation": null,
            "id": 1644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGains",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:2:3"
            },
            "returnParameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1706:0:3"
            },
            "scope": 1797,
            "src": "1674:276:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1668,
              "nodeType": "Block",
              "src": "2012:226:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1649,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "2019:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1650,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "2028:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2028:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "2019:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1656,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "2112:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1657,
                          "name": "LotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1362,
                          "src": "2121:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                            "typeString": "type(enum Lottery.LotteryState)"
                          }
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Finished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2121:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        }
                      },
                      "src": "2112:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1665,
                      "nodeType": "Block",
                      "src": "2203:33:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "6a65757820656e20636f757273",
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2216:15:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bd36fa777ebef4dd2890647c05b0591ad7930f53024ef1947f8570048774848d",
                              "typeString": "literal_string \"jeux en cours\""
                            },
                            "value": "jeux en cours"
                          },
                          "functionReturnParameters": 1648,
                          "id": 1664,
                          "nodeType": "Return",
                          "src": "2209:22:3"
                        }
                      ]
                    },
                    "id": 1666,
                    "nodeType": "IfStatement",
                    "src": "2109:127:3",
                    "trueBody": {
                      "id": 1662,
                      "nodeType": "Block",
                      "src": "2143:53:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "6a657578207465726d696e65203a206465636c6172657220766f73206761696e73",
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2156:35:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e283332bf04bb884725fc0d1327deab17c0a970af23e1917b8d920184e26a1a9",
                              "typeString": "literal_string \"jeux termine : declarer vos gains\""
                            },
                            "value": "jeux termine : declarer vos gains"
                          },
                          "functionReturnParameters": 1648,
                          "id": 1661,
                          "nodeType": "Return",
                          "src": "2149:42:3"
                        }
                      ]
                    }
                  },
                  "id": 1667,
                  "nodeType": "IfStatement",
                  "src": "2016:220:3",
                  "trueBody": {
                    "id": 1655,
                    "nodeType": "Block",
                    "src": "2049:52:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "6a657578206665726d65203a2072656375706572657220766f73206761696e73",
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2062:34:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5cc306824be72ddc9036d6bb8a15cb7c3aef01c5f79b45e41cac862b977be4e8",
                            "typeString": "literal_string \"jeux ferme : recuperer vos gains\""
                          },
                          "value": "jeux ferme : recuperer vos gains"
                        },
                        "functionReturnParameters": 1648,
                        "id": 1654,
                        "nodeType": "Return",
                        "src": "2055:41:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStateGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1973:2:3"
            },
            "returnParameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1647,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1997:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1996:15:3"
            },
            "scope": 1797,
            "src": "1952:286:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "2293:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1674,
                    "name": "PRICE_LOTTERY_TOKEN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1368,
                    "src": "2304:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1673,
                  "id": 1675,
                  "nodeType": "Return",
                  "src": "2297:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrixLottery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2263:2:3"
            },
            "returnParameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "2287:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2286:6:3"
            },
            "scope": 1797,
            "src": "2240:86:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "2377:22:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1682,
                    "name": "blockEnd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1366,
                    "src": "2388:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1681,
                  "id": 1683,
                  "nodeType": "Return",
                  "src": "2381:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 1685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEndGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:2:3"
            },
            "returnParameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1680,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "2371:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2370:6:3"
            },
            "scope": 1797,
            "src": "2328:71:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1692,
              "nodeType": "Block",
              "src": "2456:30:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1690,
                    "name": "LOTTERY_CAGNOTTE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "2467:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1689,
                  "id": 1691,
                  "nodeType": "Return",
                  "src": "2460:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 1693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSuperCagnotte",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2426:2:3"
            },
            "returnParameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "2450:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2449:6:3"
            },
            "scope": 1797,
            "src": "2401:85:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "2540:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1698,
                      "name": "prediction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "2551:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1701,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "2562:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2562:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2551:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1697,
                  "id": 1702,
                  "nodeType": "Return",
                  "src": "2544:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 1704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrediction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2510:2:3"
            },
            "returnParameters": {
              "id": 1697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1696,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2534:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2533:6:3"
            },
            "scope": 1797,
            "src": "2488:88:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "2629:88:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1709,
                      "name": "blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "2637:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1710,
                      "name": "blockStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2648:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2637:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1715,
                        "name": "blockEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2693:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1716,
                        "name": "blockStop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2704:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2693:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1708,
                    "id": 1718,
                    "nodeType": "Return",
                    "src": "2686:27:3"
                  },
                  "id": 1719,
                  "nodeType": "IfStatement",
                  "src": "2633:80:3",
                  "trueBody": {
                    "id": 1714,
                    "nodeType": "Block",
                    "src": "2661:17:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2672:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1708,
                        "id": 1713,
                        "nodeType": "Return",
                        "src": "2665:8:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2599:2:3"
            },
            "returnParameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1707,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2623:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2622:6:3"
            },
            "scope": 1797,
            "src": "2578:139:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1732,
              "nodeType": "Block",
              "src": "2775:24:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1728,
                      "name": "blockStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2779:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1729,
                      "name": "_stop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1723,
                      "src": "2791:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2779:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1731,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:17:3"
                }
              ]
            },
            "documentation": null,
            "id": 1733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1726,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1725,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "2765:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2765:9:3"
              }
            ],
            "name": "modifierBlockStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1723,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "2746:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2745:12:3"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2775:0:3"
            },
            "scope": 1797,
            "src": "2719:80:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1741,
              "nodeType": "Block",
              "src": "2851:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1738,
                      "name": "lastResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "2862:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_resultat_$1375_storage",
                        "typeString": "struct Lottery.resultat storage ref"
                      }
                    },
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cagnotte",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1372,
                    "src": "2862:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1737,
                  "id": 1740,
                  "nodeType": "Return",
                  "src": "2855:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 1742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCagnotte",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2821:2:3"
            },
            "returnParameters": {
              "id": 1737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1736,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "2845:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1735,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2844:6:3"
            },
            "scope": 1797,
            "src": "2801:83:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1750,
              "nodeType": "Block",
              "src": "2933:26:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1747,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2010,
                      "src": "2944:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2944:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1746,
                  "id": 1749,
                  "nodeType": "Return",
                  "src": "2937:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 1751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:2:3"
            },
            "returnParameters": {
              "id": 1746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "2927:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2926:6:3"
            },
            "scope": 1797,
            "src": "2886:73:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1775,
              "nodeType": "Block",
              "src": "3008:124:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1756,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "3016:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1759,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1757,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "3020:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3020:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3016:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3035:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3016:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1769,
                                "name": "lastResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1377,
                                "src": "3105:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                  "typeString": "struct Lottery.resultat storage ref"
                                }
                              },
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nbGagnants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1374,
                              "src": "3105:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1766,
                                "name": "lastResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1377,
                                "src": "3081:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                  "typeString": "struct Lottery.resultat storage ref"
                                }
                              },
                              "id": 1767,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cagnotte",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1372,
                              "src": "3081:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1960,
                            "src": "3081:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3081:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3076:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3076:52:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1755,
                    "id": 1773,
                    "nodeType": "Return",
                    "src": "3069:59:3"
                  },
                  "id": 1774,
                  "nodeType": "IfStatement",
                  "src": "3012:116:3",
                  "trueBody": {
                    "id": 1764,
                    "nodeType": "Block",
                    "src": "3044:17:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3055:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1755,
                        "id": 1763,
                        "nodeType": "Return",
                        "src": "3048:8:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGains",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2978:2:3"
            },
            "returnParameters": {
              "id": 1755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1754,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "3002:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3001:6:3"
            },
            "scope": 1797,
            "src": "2961:171:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1786,
              "nodeType": "Block",
              "src": "3181:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "3202:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3202:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1781,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "3192:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1780,
                  "id": 1785,
                  "nodeType": "Return",
                  "src": "3185:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolde",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3151:2:3"
            },
            "returnParameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1779,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1787,
                  "src": "3175:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3174:6:3"
            },
            "scope": 1797,
            "src": "3134:82:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "3270:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1792,
                      "name": "lastResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "3281:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_resultat_$1375_storage",
                        "typeString": "struct Lottery.resultat storage ref"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "nbGagnants",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1374,
                    "src": "3281:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1791,
                  "id": 1794,
                  "nodeType": "Return",
                  "src": "3274:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNbGagnants",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:2:3"
            },
            "returnParameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1790,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "3264:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3264:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3263:6:3"
            },
            "scope": 1797,
            "src": "3218:87:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1798,
        "src": "52:3256:3"
      }
    ],
    "src": "0:3309:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        1797
      ]
    },
    "id": 1798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1347,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/germaindacunha/Documents/GitHub/Alyra/project/Ether-Union/Ether-Union-BackEnd/contracts/Cagnottes.sol",
        "file": "./Cagnottes.sol",
        "id": 1348,
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 885,
        "src": "25:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1349,
              "name": "Cagnottes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 884,
              "src": "72:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cagnottes_$884",
                "typeString": "contract Cagnottes"
              }
            },
            "id": 1350,
            "nodeType": "InheritanceSpecifier",
            "src": "72:9:3"
          }
        ],
        "contractDependencies": [
          884,
          1276,
          1345,
          1910
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1797,
        "linearizedBaseContracts": [
          1797,
          884,
          1910,
          1276,
          1345
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1354,
            "name": "prediction",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "84:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1353,
              "keyType": {
                "id": 1351,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "93:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "84:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1352,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "104:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1358,
            "name": "win",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "131:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1357,
              "keyType": {
                "id": 1355,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "140:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "131:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1356,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "151:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Lottery.LotteryState",
            "id": 1362,
            "members": [
              {
                "id": 1359,
                "name": "Started",
                "nodeType": "EnumValue",
                "src": "192:7:3"
              },
              {
                "id": 1360,
                "name": "Finished",
                "nodeType": "EnumValue",
                "src": "201:8:3"
              },
              {
                "id": 1361,
                "name": "Pending",
                "nodeType": "EnumValue",
                "src": "211:7:3"
              }
            ],
            "name": "LotteryState",
            "nodeType": "EnumDefinition",
            "src": "172:48:3"
          },
          {
            "constant": false,
            "id": 1364,
            "name": "blockStop",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "222:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1363,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "222:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1366,
            "name": "blockEnd",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "246:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1365,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "246:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1368,
            "name": "PRICE_LOTTERY_TOKEN",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "269:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1367,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "269:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1370,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "304:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LotteryState_$1362",
              "typeString": "enum Lottery.LotteryState"
            },
            "typeName": {
              "contractScope": null,
              "id": 1369,
              "name": "LotteryState",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1362,
              "src": "304:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LotteryState_$1362",
                "typeString": "enum Lottery.LotteryState"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Lottery.resultat",
            "id": 1375,
            "members": [
              {
                "constant": false,
                "id": 1372,
                "name": "cagnotte",
                "nodeType": "VariableDeclaration",
                "scope": 1375,
                "src": "353:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1371,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1374,
                "name": "nbGagnants",
                "nodeType": "VariableDeclaration",
                "scope": 1375,
                "src": "370:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1373,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "370:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "resultat",
            "nodeType": "StructDefinition",
            "scope": 1797,
            "src": "333:55:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1377,
            "name": "lastResult",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "390:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_resultat_$1375_storage",
              "typeString": "struct Lottery.resultat"
            },
            "typeName": {
              "contractScope": null,
              "id": 1376,
              "name": "resultat",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1375,
              "src": "390:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_resultat_$1375_storage_ptr",
                "typeString": "struct Lottery.resultat"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1395,
              "nodeType": "Block",
              "src": "433:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1380,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "437:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1381,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "445:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "445:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "437:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "437:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1385,
                      "name": "blockStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "469:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "481:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "469:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "469:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "492:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "492:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "504:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 1389,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "486:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1394,
                  "nodeType": "ExpressionStatement",
                  "src": "486:21:3"
                }
              ]
            },
            "documentation": null,
            "id": 1396,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:2:3"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:3"
            },
            "scope": 1797,
            "src": "412:98:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "582:210:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1406,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "594:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "594:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1408,
                            "name": "blockEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "609:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1409,
                            "name": "blockStop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "620:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "609:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "594:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "586:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "586:44:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1415,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "642:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1416,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "651:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "651:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "642:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "634:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1420,
                  "nodeType": "ExpressionStatement",
                  "src": "634:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1421,
                        "name": "lastResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "676:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_resultat_$1375_storage",
                          "typeString": "struct Lottery.resultat storage ref"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbGagnants",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1374,
                      "src": "676:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "676:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "676:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1427,
                      "name": "blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "705:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1428,
                      "name": "_blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "716:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "705:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "705:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1431,
                      "name": "PRICE_LOTTERY_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "729:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1432,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "751:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "729:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1434,
                  "nodeType": "ExpressionStatement",
                  "src": "729:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1435,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "761:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1436,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "769:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Started",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "769:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "761:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "761:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1403,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1402,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "572:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "572:9:3"
              }
            ],
            "name": "initierLottery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1398,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "536:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1400,
                  "name": "_blockEnd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "549:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:29:3"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:3"
            },
            "scope": 1797,
            "src": "512:280:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "833:268:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1447,
                            "name": "prediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "844:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1450,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1448,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "855:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "855:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "844:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "870:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "844:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "836:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "836:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1456,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "883:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "883:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1458,
                            "name": "blockEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "899:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1459,
                            "name": "blockStop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "910:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "899:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "883:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "875:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "875:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1465,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "931:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1466,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "940:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Started",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "940:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "931:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "923:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1470,
                  "nodeType": "ExpressionStatement",
                  "src": "923:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1473,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2020,
                                "src": "982:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "982:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1472,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "972:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "972:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1476,
                          "name": "PRICE_LOTTERY_TOKEN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "997:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "972:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "964:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "964:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1481,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1027:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1027:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1483,
                        "name": "PRICE_LOTTERY_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "1038:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1480,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "1021:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "1062:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1073:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1073:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1062:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1490,
                      "name": "_prediction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1443,
                      "src": "1087:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1062:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 1494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "play",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "name": "_prediction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "808:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "807:18:3"
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "833:0:3"
            },
            "scope": 1797,
            "src": "794:307:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1532,
              "nodeType": "Block",
              "src": "1139:197:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1500,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1151:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1501,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1160:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Started",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1160:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1151:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1143:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1505,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1507,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "1193:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1193:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1509,
                          "name": "blockEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1366,
                          "src": "1209:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1193:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1185:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1513,
                        "name": "lastResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "1222:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_resultat_$1375_storage",
                          "typeString": "struct Lottery.resultat storage ref"
                        }
                      },
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cagnotte",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1372,
                      "src": "1222:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1516,
                      "name": "LOTTERY_CAGNOTTE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1244:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1222:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1519,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "1264:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1520,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "1272:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Finished",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1272:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "1264:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1524,
                      "name": "LOTTERY_CAGNOTTE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1297:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1316:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1297:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1528,
                      "name": "blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "1321:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1332:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1321:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1531,
                  "nodeType": "ExpressionStatement",
                  "src": "1321:12:3"
                }
              ]
            },
            "documentation": null,
            "id": 1533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1496,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "1129:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1129:9:3"
              }
            ],
            "name": "endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:3"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:3"
            },
            "scope": 1797,
            "src": "1103:233:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "1376:78:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1539,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1388:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1540,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1397:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finished",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1397:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1388:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1380:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1545,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "1423:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1546,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "1431:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1431:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "1423:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    }
                  },
                  "id": 1549,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1535,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "1366:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1366:9:3"
              }
            ],
            "name": "closeGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:3"
            },
            "returnParameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:0:3"
            },
            "scope": 1797,
            "src": "1338:116:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1591,
              "nodeType": "Block",
              "src": "1482:190:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1555,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1494:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1556,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1503:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finished",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1503:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1494:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1486:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1562,
                            "name": "prediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "1537:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1565,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1563,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "1548:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1548:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1537:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1566,
                            "name": "lastResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1563:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_resultat_$1375_storage",
                              "typeString": "struct Lottery.resultat storage ref"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cagnotte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1372,
                          "src": "1563:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1537:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1529:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1571,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "1587:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1574,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1572,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1591:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1591:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1587:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1605:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1587:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "lastResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1377,
                        "src": "1613:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_resultat_$1375_storage",
                          "typeString": "struct Lottery.resultat storage ref"
                        }
                      },
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbGagnants",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1374,
                      "src": "1613:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1638:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1613:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1584,
                        "name": "prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "1643:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1587,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1585,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1654:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1654:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1643:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1668:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1643:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 1592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveWin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1472:2:3"
            },
            "returnParameters": {
              "id": 1553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:3"
            },
            "scope": 1797,
            "src": "1456:216:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1643,
              "nodeType": "Block",
              "src": "1706:244:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1596,
                            "name": "win",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "1718:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1599,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1597,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "1722:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1722:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1718:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1718:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1710:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1603,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        },
                        "id": 1608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1605,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "1754:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1606,
                            "name": "LotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "1763:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                              "typeString": "type(enum Lottery.LotteryState)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1763:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LotteryState_$1362",
                            "typeString": "enum Lottery.LotteryState"
                          }
                        },
                        "src": "1754:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1746:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1612,
                            "name": "prediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "1796:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1615,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1613,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "1807:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1807:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1796:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1616,
                            "name": "lastResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "1822:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_resultat_$1375_storage",
                              "typeString": "struct Lottery.resultat storage ref"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cagnotte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1372,
                          "src": "1822:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1796:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2023,
                        2024
                      ],
                      "referencedDeclaration": 2023,
                      "src": "1788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1621,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "1846:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1624,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1622,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1850:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1850:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1846:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1865:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1846:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1637,
                                  "name": "lastResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "1923:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                    "typeString": "struct Lottery.resultat storage ref"
                                  }
                                },
                                "id": 1638,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nbGagnants",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1374,
                                "src": "1923:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1634,
                                  "name": "lastResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "1899:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                    "typeString": "struct Lottery.resultat storage ref"
                                  }
                                },
                                "id": 1635,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cagnotte",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1372,
                                "src": "1899:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1960,
                              "src": "1899:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1899:46:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1894:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1894:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1874:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1874:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1874:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1642,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:73:3"
                }
              ]
            },
            "documentation": null,
            "id": 1644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGains",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:2:3"
            },
            "returnParameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1706:0:3"
            },
            "scope": 1797,
            "src": "1674:276:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1668,
              "nodeType": "Block",
              "src": "2012:226:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_LotteryState_$1362",
                      "typeString": "enum Lottery.LotteryState"
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1649,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "2019:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1650,
                        "name": "LotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "2028:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                          "typeString": "type(enum Lottery.LotteryState)"
                        }
                      },
                      "id": 1651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2028:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      }
                    },
                    "src": "2019:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_LotteryState_$1362",
                        "typeString": "enum Lottery.LotteryState"
                      },
                      "id": 1659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1656,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "2112:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1657,
                          "name": "LotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1362,
                          "src": "2121:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_LotteryState_$1362_$",
                            "typeString": "type(enum Lottery.LotteryState)"
                          }
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Finished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2121:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LotteryState_$1362",
                          "typeString": "enum Lottery.LotteryState"
                        }
                      },
                      "src": "2112:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1665,
                      "nodeType": "Block",
                      "src": "2203:33:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "6a65757820656e20636f757273",
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2216:15:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bd36fa777ebef4dd2890647c05b0591ad7930f53024ef1947f8570048774848d",
                              "typeString": "literal_string \"jeux en cours\""
                            },
                            "value": "jeux en cours"
                          },
                          "functionReturnParameters": 1648,
                          "id": 1664,
                          "nodeType": "Return",
                          "src": "2209:22:3"
                        }
                      ]
                    },
                    "id": 1666,
                    "nodeType": "IfStatement",
                    "src": "2109:127:3",
                    "trueBody": {
                      "id": 1662,
                      "nodeType": "Block",
                      "src": "2143:53:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "6a657578207465726d696e65203a206465636c6172657220766f73206761696e73",
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2156:35:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e283332bf04bb884725fc0d1327deab17c0a970af23e1917b8d920184e26a1a9",
                              "typeString": "literal_string \"jeux termine : declarer vos gains\""
                            },
                            "value": "jeux termine : declarer vos gains"
                          },
                          "functionReturnParameters": 1648,
                          "id": 1661,
                          "nodeType": "Return",
                          "src": "2149:42:3"
                        }
                      ]
                    }
                  },
                  "id": 1667,
                  "nodeType": "IfStatement",
                  "src": "2016:220:3",
                  "trueBody": {
                    "id": 1655,
                    "nodeType": "Block",
                    "src": "2049:52:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "6a657578206665726d65203a2072656375706572657220766f73206761696e73",
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2062:34:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5cc306824be72ddc9036d6bb8a15cb7c3aef01c5f79b45e41cac862b977be4e8",
                            "typeString": "literal_string \"jeux ferme : recuperer vos gains\""
                          },
                          "value": "jeux ferme : recuperer vos gains"
                        },
                        "functionReturnParameters": 1648,
                        "id": 1654,
                        "nodeType": "Return",
                        "src": "2055:41:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStateGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1973:2:3"
            },
            "returnParameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1647,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1997:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1996:15:3"
            },
            "scope": 1797,
            "src": "1952:286:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "2293:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1674,
                    "name": "PRICE_LOTTERY_TOKEN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1368,
                    "src": "2304:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1673,
                  "id": 1675,
                  "nodeType": "Return",
                  "src": "2297:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrixLottery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2263:2:3"
            },
            "returnParameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "2287:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2286:6:3"
            },
            "scope": 1797,
            "src": "2240:86:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "2377:22:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1682,
                    "name": "blockEnd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1366,
                    "src": "2388:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1681,
                  "id": 1683,
                  "nodeType": "Return",
                  "src": "2381:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 1685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEndGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:2:3"
            },
            "returnParameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1680,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "2371:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2370:6:3"
            },
            "scope": 1797,
            "src": "2328:71:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1692,
              "nodeType": "Block",
              "src": "2456:30:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1690,
                    "name": "LOTTERY_CAGNOTTE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "2467:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1689,
                  "id": 1691,
                  "nodeType": "Return",
                  "src": "2460:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 1693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSuperCagnotte",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2426:2:3"
            },
            "returnParameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "2450:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2449:6:3"
            },
            "scope": 1797,
            "src": "2401:85:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "2540:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1698,
                      "name": "prediction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "2551:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1701,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "2562:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2562:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2551:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1697,
                  "id": 1702,
                  "nodeType": "Return",
                  "src": "2544:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 1704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrediction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2510:2:3"
            },
            "returnParameters": {
              "id": 1697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1696,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2534:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2533:6:3"
            },
            "scope": 1797,
            "src": "2488:88:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "2629:88:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1709,
                      "name": "blockEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "2637:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1710,
                      "name": "blockStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2648:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2637:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1715,
                        "name": "blockEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "2693:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1716,
                        "name": "blockStop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2704:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2693:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1708,
                    "id": 1718,
                    "nodeType": "Return",
                    "src": "2686:27:3"
                  },
                  "id": 1719,
                  "nodeType": "IfStatement",
                  "src": "2633:80:3",
                  "trueBody": {
                    "id": 1714,
                    "nodeType": "Block",
                    "src": "2661:17:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2672:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1708,
                        "id": 1713,
                        "nodeType": "Return",
                        "src": "2665:8:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2599:2:3"
            },
            "returnParameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1707,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2623:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2622:6:3"
            },
            "scope": 1797,
            "src": "2578:139:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1732,
              "nodeType": "Block",
              "src": "2775:24:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1728,
                      "name": "blockStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2779:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1729,
                      "name": "_stop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1723,
                      "src": "2791:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2779:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1731,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:17:3"
                }
              ]
            },
            "documentation": null,
            "id": 1733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1726,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1725,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1884,
                  "src": "2765:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2765:9:3"
              }
            ],
            "name": "modifierBlockStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1723,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "2746:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2745:12:3"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2775:0:3"
            },
            "scope": 1797,
            "src": "2719:80:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1741,
              "nodeType": "Block",
              "src": "2851:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1738,
                      "name": "lastResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "2862:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_resultat_$1375_storage",
                        "typeString": "struct Lottery.resultat storage ref"
                      }
                    },
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cagnotte",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1372,
                    "src": "2862:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1737,
                  "id": 1740,
                  "nodeType": "Return",
                  "src": "2855:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 1742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCagnotte",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2821:2:3"
            },
            "returnParameters": {
              "id": 1737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1736,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "2845:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1735,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2844:6:3"
            },
            "scope": 1797,
            "src": "2801:83:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1750,
              "nodeType": "Block",
              "src": "2933:26:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1747,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2010,
                      "src": "2944:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2944:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1746,
                  "id": 1749,
                  "nodeType": "Return",
                  "src": "2937:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 1751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:2:3"
            },
            "returnParameters": {
              "id": 1746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1745,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "2927:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2926:6:3"
            },
            "scope": 1797,
            "src": "2886:73:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1775,
              "nodeType": "Block",
              "src": "3008:124:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1756,
                        "name": "win",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "3016:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1759,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1757,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "3020:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3020:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3016:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3035:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3016:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1769,
                                "name": "lastResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1377,
                                "src": "3105:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                  "typeString": "struct Lottery.resultat storage ref"
                                }
                              },
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nbGagnants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1374,
                              "src": "3105:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1766,
                                "name": "lastResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1377,
                                "src": "3081:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_resultat_$1375_storage",
                                  "typeString": "struct Lottery.resultat storage ref"
                                }
                              },
                              "id": 1767,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cagnotte",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1372,
                              "src": "3081:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1960,
                            "src": "3081:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3081:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3076:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3076:52:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1755,
                    "id": 1773,
                    "nodeType": "Return",
                    "src": "3069:59:3"
                  },
                  "id": 1774,
                  "nodeType": "IfStatement",
                  "src": "3012:116:3",
                  "trueBody": {
                    "id": 1764,
                    "nodeType": "Block",
                    "src": "3044:17:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3055:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1755,
                        "id": 1763,
                        "nodeType": "Return",
                        "src": "3048:8:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGains",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2978:2:3"
            },
            "returnParameters": {
              "id": 1755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1754,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "3002:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3001:6:3"
            },
            "scope": 1797,
            "src": "2961:171:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1786,
              "nodeType": "Block",
              "src": "3181:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "3202:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3202:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1781,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "3192:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1780,
                  "id": 1785,
                  "nodeType": "Return",
                  "src": "3185:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolde",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3151:2:3"
            },
            "returnParameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1779,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1787,
                  "src": "3175:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3174:6:3"
            },
            "scope": 1797,
            "src": "3134:82:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "3270:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1792,
                      "name": "lastResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1377,
                      "src": "3281:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_resultat_$1375_storage",
                        "typeString": "struct Lottery.resultat storage ref"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "nbGagnants",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1374,
                    "src": "3281:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1791,
                  "id": 1794,
                  "nodeType": "Return",
                  "src": "3274:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 1796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNbGagnants",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:2:3"
            },
            "returnParameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1790,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "3264:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3264:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3263:6:3"
            },
            "scope": 1797,
            "src": "3218:87:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1798,
        "src": "52:3256:3"
      }
    ],
    "src": "0:3309:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-18T13:54:32.135Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}